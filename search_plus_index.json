{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction This gitbook contains notes on the computer science topics that I have learnt about since starting at IBM. Please note that some of the content is copied verbatum from text books, with no references. "},"commands/bluemix-commands.html":{"url":"commands/bluemix-commands.html","title":"Bluemix","keywords":"","body":"Bluemix General Commands Gives you a list of all the available Bluemix service offerings. bx service offerings Lists apps in current space. bx app list Push (deploy or update) app. This can take a host of parameters, including (i) the command to start the app, (ii) memory allocation, (iii) manifest file, etc. bx app push Shows services in current app. bx service list Create a service. Note that setting plan to Lite provides a free NoSQL database for nonproduction use bx service create bx service bind This deletes the app. The -r parameter removes any mapped application routes. Do this before deleting the services. bx app delete -r This deletes the service. bx service delete bx app logs Get various levels of help on Bluemix commands. bx help or bx help Bluemix registries ibmcloud cr login docker tag registry.eu-gb.bluemix.net//: docker push registry.eu-gb.bluemix.net//: ibmcloud cr image-list # Check the image has been placed correctly Cluster setup For more detailed setup of clusters see the instructions (here)[https://console.bluemix.net/docs/containers/cs_clusters.html#clusters]. ic cs cluster-create --location dal10 --workers 3 --public-vlan --private-vlan --machine-type --name Viewing running application Get the port number (the last line of the trace output) Get the public IP bx dev deploy --trace bx cs workers Bare metal vs VMs More compute resources: You can provision your worker node as a single-tenant physical server, also referred to as bare metal. Bare metal gives you direct access to the physical resources on the machine, such as the memory or CPU. This setup eliminates the virtual machine hypervisor that allocates physical resources to virtual machines that run on the host. Instead, all of a bare metal machine's resources are dedicated exclusively to the worker. With VMs, you get greater flexibility, quicker provisioning times, and more automatic scalability features than bare metal, at a more cost-effective price. You can use VMs for most general purpose use cases such as testing and development environments, staging and prod environments, microservices, and business apps. bx login -a https://api.ng.bluemix.net -u -p -o -s dev bx target Check the current space and organisation bx target -s test Change to a different space named test bx iam spaces Display the spaces available in the current organisation bx app start Launch the app. bx api This is used to set or change the API endpoint. Note that the endpoint for the UK is api.eu-gb.bluemix.net bx cf These are Cloud Foundary command line tools. Allow you to push etc. cf logs bluemix-blog —recent Check the logs of a Cloud Foundary App. bx account orgs List all the organisations on the currently logged in account. Used Since App Launch General To log in: bx api api.eu-gb.bluemix.ne - Set the api upon login bx login -sso - Log in using SSO bx target -o edward.stevinson -s cloudnative-dev - Set the organisation and space Plugins bx plugin install IBM-Containers -r bluemix Install a plugin IBM-Containers bx ic init Upon launching to create authentication. bx plugin show IBM-containers Clound Foundry bx cf push - Deploy the app bx cf env - See the environment variables OpenWhisk wsk package refresh This automatically create OpenWhisk packages with the Cloudant credentials in your space. NB. wsk is the Openwhisk CLI tool. To create an OpenWhisk package:wsk package create socialreview --param cloudant_url \\ --param watson_url \\ --param watson_username \\ --param watson_password Then we build actions associated with the package, for example: wsk action create socialreview/initCloudant openwhisk/actions/initCloudant.js Which are subsequently used with: wsk action invoke socialreview/initCloudant —blocking Create a REST API gateway: wsk api create /api /reviews/list get socialreview/getReviews IBM Containers bx ic [COMMAND OPTION][ARGUMENTS…] The order: Create a service instance with service create Push the app with app push Bind the service with the app with service bind Make any changes you may want to the services and app. Use app push again to make these changes live. New Commands Please note that the above commands may be deprecated. Bluemix automatically collects data to 'improve the service'. To turn that off use the following command. ibmcloud config --usage-stats-collect false "},"commands/docker-commands.html":{"url":"commands/docker-commands.html","title":"Docker","keywords":"","body":"Docker Notes Docker is a shipping container system for code. It acts as an engine that enables any payload to be encapsulated as a lightweight, portable self-sufficient container. When docker builds images it does so in its own daemon. However, when we want to run things locally inside our VM (Minikube) we need to specify the daemon to use. Dockerfile The Dockerfile contains all the instructions required to build a given image. They should be as ephemeral as possible. The .dockerignore file should be used to ignore all files that are not used to build the image so as to improve the performance of the build. Wherever possible sort multi-line arguments alphanumerically to avoid duplication of packages and to make easier to update. To create a new line between arguments use the backspace, \\, character. For each instruction in the Dockerfile, Docker will look for an existing image it can use in the cache, rather than creating a duplicate image. To not use this, implement —no-cache=true option on the docker build command. Docker-Compose link and depends_on differ in that order to start up and whether ports are automatically assigned. Dockerfile Syntax FROM [:] [AS ] All Dockerfile's must start this instruction. The FROM instruction initialises a new build stage and sets the Base Image for subsequent instructions. It can appear several times to create multiple images or use one build stage as a dependency for another. COPY The COPY instruction copies new files or directories from and adds them to the filesystem of the container at the path . COPY is preferred to ADD because it is more transparent. It only supports copying of local files into the container, unlike ADD which supports some more capabilities. LABEL RUN The RUN instruction will execute any commands in a new layer on top of the current image and commit the results. The most common usage of run is the RUN apt-get use-case, which installs packages. CMD Labels help organise images by project. Docker hub is Docker's reposiroty for docker images. VOLUME [\"/data\"] The VOLUME instruction creates a mount point with the specified name. EXPOSE ENTRYPOINT Docker Compose Docker Compose is a tool for defining and running multi-container Docker applications. Commands Fundamental Commands docker build -t -t Give a shortened name to the image. Build the docker image with Kubernetes. docker run --rm -p 3000:3000 devcamp/hello-world —rm : remove the container after it has completed. -p : explicitely map a single port or range of ports -t : allocate a pseudo-tty —pri : privileged. Give extended privileges to this container. When building docker images: eval $(minikube docker-env) This tells Docker that it should talk to the Minikube Docker daemon instead of the local daemon. docker images make -f Remove docker container and images docker ps // This lists all of the docker containers. docker container stop // Stops the specified container (so that it can be deleted). docker rm $(docker ps -aq) // This removes all docker containers gradle createDocker // Can be run from master, and only needed if the image has been deleted gradle initDocker // Again from master. For reference this task is in docker.gradle in the Deployment project Delete docker images/ containers. docker rmi # delete a docker image docker rm $(docker ps -a -q) # delete all the docker containers i2 Docker Commands docker exec --user db2inst1 -t -i db2 /bin/bash -i Use this to get into the docker instance of db2 on mac. "},"commands/eclipse-commands.html":{"url":"commands/eclipse-commands.html","title":"Eclipse","keywords":"","body":"Eclipse Mac Commands cmmd + shift + / This opens up the help dropdown, ready to type what you need help with. cmmd + D Deletes the current line cmmd + alt + arrows This duplicates the current line either up or down. alt + arrows Moves the selected line in the specified direction. alt + shift + R Refactors all of a specific word. cmmd + page down Goes to the next page cmmd + [ Goes to the previous selection. (custom) cmmd + shift + A Toggle to package explorer view. (custom) cmmd + shift + right Toggle to editor view. alt + x Runs the selected lines of SQL. control + space Doing this whilst in the 'edit comment' section will give you a drop down list of all your previous comments. cmmd + 3 Opens the implementation of a method or class. cmmd + F8 Tabs between different perspectives cmmd + E Tabs between files in editor. Windows Commands ctrl + Page Up Scrolls over the tabs Personalised Short Keys cmmd + shift + J Changes to the Java perspective. "},"commands/general-commands.html":{"url":"commands/general-commands.html","title":"General","keywords":"","body":"Terminal Commands This page summarises common terminal commands that span across categories. Note that a lot of terminal shortcuts are stored at /usr/local/beg, e.g. pip3. The file .bashrc contains the aliases for commands. Commands General sudo -i Goes into super-administrator mode. exit To exit this admin mode. cat Takes a file and prints it to screen. | pbcopy This copies the output of command to the clipboard. pbpaste will paste the contents of the clipboard. -pboard {board} as an argument allows you to use different pasteboards, but I have, as yet, been unable to figure out quite how this works. The | creates pipelines. This means that the output from the first command is connected to the input of the next command. File Management ls -altr -a - Shows hidden files, i.e. those that start with a . -l - Provides extra information -t - Lists them in date order -r - Lists them with the most recent at the bottom brew cask uninstall brew cask search Running Processes ps Lists the currently running processes on the computer. -e is the same as -A and displays information about other users' processes, including those without controlling terminals. -f displays the bid, pid, and other information about the processes. For example ps -ef | grep java returns a list of all the running processes that are using java. Web curl -L curl is a tool to transfer data from or to a server, using one of the supported protocols. The -L argument: If the server reports that the requested page has moved to a different location (indicated with a Location: header and a 3XX response code), this option will make curl redo the request on the new place. Variables: ${} Whatever is run inside the parentheses is run inside a subshell and is returned as a value. It can be used in a string to add the returned string within a larger string e.g. echo \"http://${nodeip}\" $ Can be used within a string to add a variable to the string. To print a variable on mac use echo $HOME, whilst on windows use echo %PATH% (having set it with set PATH=). =$() This how to set a variable in CLI. cat /dev/urandom | env LC_CTYPE=C tr -dc 'a-zA-Z0-9' | fold -w 256 | head -n 1 | xargs echo -n This generates a 2048-buit secret key. The LC_CTYPE+C command selects the “C” locale, which basically means means “nothing fancy”. env This is the 'set environment and execute command, or print environment' method. env prints all env variables VCAP_SERVICES environment variables Path and File Access ln -s \"/Applications/Sublime Text 3.app/Contents/SharedSupport/bin/subl\" /usr/local/bin/subl Basically you have to put the executable for the app on the path, which you achieve by putting in one of the /usr/local/ things which are themselves on the path. `export PATH=$PATH:`` Add a new directory to PATH ln -s Link a file to something; -s created a symbollic link (doesn't mve anything) (sometimes have to save in .) For example, to create a symbolic link to open Sublime Text, use the following command: To remove a path from the PATH environment variable on a mac: echo $PATH // and copy it's value export PATH=\"\" export PATH=\"/path/you/want/to/keep\" Or to add a path to the PATH environment variable: // export PATH=/opt/apache-maven-3.5.3/bin:$PATH export PATH=/path/want/to/add:$PATH Repackaging Files When tar has been used to collect many files into one archive file, it is referred to as a tarball. tar -cvzf .tgz /path/to/source/folder This uses tar to archive the directory and then gzip to compress it. The arguments are as follows: compress, zip, verbose and file. -x, --extract, --get extract files from an archive -v, --verbose verbosely list files processed -z, --gzip, --gunzip, --ungzip filter the archive through gzimkdir up -f, --file [HOSTNAME:]F use archive file or device F (default \"-\", meaning stdin/stdout) -C In x mode this changes the directories after opening the archive but before extracting entries from the archive. In c and r mode this changes the directory before adding the following files. -t : List archive contents to stdout. Prints the absolute path of all the files in the archive. tar -xvzf /path/to/yourfile.tgz - Extract tgz unzip -d The directory in which to extract the files. zip -r squash.zip dir1: zips a directory GNU tar brew install gnu-tar // This installs GNU tar, which packages files differently. gtar <> -c : Create a new archive. Directories are archived recursively, unless the --no-recursion argument is used. -f : Read the archive from from a specified file -z : tar -cvf files.tar /path/to/file0 /path/to/file1 ; gzip -9 files.tar This first TARs the file and then gzips it. .Z file type is an old Unix/ Linux compression type, achieved with the $compress command. pax This is for reading and writing file archives and copying directory hierarchies Permissions The different permission are as follows: r = read access w = write access x = execute d = indicates a directory l = symbolic link @ = indicates that this file has extended attributes chmod chmod [options] [permissions] [file] [name] Used to change the permissions of files or directories. It stands for 'change mode'. ls -l This displays (from left to right) the owner's permissions, the group permissions and everybody's permissions. sudo chmod 777 This gives access to everyone, but is bad practice.; Bash source ./.bashrc This reloads the bashrc file so that you don't have to close vim and terminal, and hence Eclipse. Publish an i2 component mkdir publish mv macos*tar.gz publish components publish \"External/IBM JDK 8 Darwin Binary Distribution:8.0.5.5\" /copy_to_repository /export_fs:$PWD/publish /retraction:deprecate /retract_at:+6m Searching within Terminal find . name | grep This searches for a search term within the name of the all the files in the current directory and lower. grep [OPTIONS] PATTERN [FILE...] grep which stands for global regular expression print, processes text line by line and prints any lines which match a specified pattern. `which `` This locates a file on the path. $PATH Lists all the places terminal has looked for the command which where is the program installed ls -l | grep iTerm cmmd + option + / Gives a drop down of the most commonly used terminals. cmmd + D Splits the current tab into two panes vertically. cmmd + shift + D Splits the current tab into two panes horizontally ctrl + cmmd + arrows Resize the split panes cmmd + option + arrows Jumps between split panes cmmd Whilst holding the command button, one can select many continuous selections. File manipulation and inspection sed 's/FindThisWord/ReplaceWithThisWord/g' file.txt You can replace all the instances of a word in a file with the use of this command. fold [-bs] [-w width] [file ...] This is a filter that folds the contents of the specified files, breaking the lines to have a maximum of 80 columns. jar tf Displays the contents of a jar. Other stdout seems to be a holder for the standard location to put output, but I do not know any more than this. Apparently opening the file /dev/stdout is equivalent to the following call: fd = fcntl(STDOUT_FILENO, F_DUPFD, 0) xargs [command [initial-arguments]] xargs builds and executes command lines from standard input. It reads items from the standard input, delimited by blanks (which can be protected with double or single quotes or a backslash) or newlines, and executes the command (the default command is echo, located at /bin/echo) one or more times with any initial-arguments followed by items read from standard input. Blank lines on the standard input are ignored. head [-#] Prints out the first # of lines of the stated file. rm -Rf This deletes all the contents of a directory without having to type yes to each sub-directory. find . \\! -name 'file' -delete This deletes all files apart from the one specified. tr [-Ccsu] string1 string2 This utility copies the standard input to the standartd output, substituting or deleting selected characters. cat [-benstuv] [file ...] The cat utility reads files sequentially, writing them to the standard output. open -e Opens the file with TextEdit. Shortkeys cmmd + down Opens a the highlighted file in Finder. cmmd + up Traverses to the above direcory in Finder. Other On a windows the command to move a file is not mv but move shebang e.g. #!/bin/sh is an example of a shebang, which tells the parent shell which interpreter should be used to execute the script. Redirection > is for redirecting an output file-descriptor and > is for redirecting an input file-descriptor. What this means is that the output of a command can be written to a file with the command ls -l > output.txt. Synchronising files rsync: see common usages here. "},"commands/github-commands.html":{"url":"commands/github-commands.html","title":"Github","keywords":"","body":"Github Notes There are two ways of integrating changes from one branch into another in Git. One is merge and the other is rebase. merge. This is a three-way merge between the two latest branch snapshots and the ost common ancestor of the two. rebase. NB. If you fork then clone it will have ME as the push repo, but if you clone directly it will have the ORIGINAL repo as the push repo. Personal access token can be generated by following these instructions. This can be used for two-factor authentication or to access protected content in an organisation that uses SSO. Commands hub create : Creates a remote so git can push to github hub browse : Open browser at the directory. git remote -v : Sets the origin remote. git add . : Add the path. -A : all git pull -r or --rebase: When true, rebase the current branch on top of the upstream branch after fetching. This means that instead of merging, git finds the base of your branch, finds all of the commits between that base and HEAD, and re-plays those commits on the HEAD branch you're rebasing onto. Git creates new commits that represent what your changes look like on top of the rebased branch. See this for a good explanation. git clone -q: Operate quietly. Progress is not reported to the standard error stream. git remote set-url : To change the upstream remote of the directory: add : To add a remote upon creation of the repo. Branching git branch -u origin edward-stevinson Set the upstream branch tying your local branch to the GHE branch -u , --set-upstream-to= Set up 's tracking information so is considered 's upstream branch. If no is specified, then it defaults to the current branch. git branch -vv - Show which upstream branch all the branches of that repo are tracking git branch -f - reassign a branch to a specific commit The following code brings in changes from master to your branch and then pushes your branch: git pull --rebase git checkout git rebase master git checkout master git merge This removes untracked files from the working tree. The -f is short for —force and overrides the default functionality that git refuses to delete files or directories. The -x means that the standard ignore rules set by the .gitignore file. git clean -fx The -a, short for —all, tells the command to automatically stage files that have been modified and deleted, but new files you have not told Git about are not affected. git commit - This removes the .git file and so stops git tracking changes in the repo. rm -rf .git An ancilliary plumbing command primarily used for manipulation. One common usage is to print the SHA1 hashses given a revision specifier. git rev-parse To delete a repo: git push origin --delete To remove untracked files from the working tree use the clean command. It does this by recursively removing files that are not under version. -x This also removes ignored files. Merging and rebasing git mergetool - To deal with merges git rebase -i HEAD~4 - interactive rebasing. This opens up a UI. Select the number of commits you want the option of refactoring. It creates a new series of commits to represent the changes, starting from where you selected to go up to in the original command. Resetting changes Reset current HEAD to the specified state. You can think of HEAD as the current branch (when you switch branches, the HEAD revision changes to point to the tip of the new branch). git reset - reset reverts changes by moving a branch reference back to an older commit but this only works for local changes git reset --hard HEAD~3 - resets the index and the working tree. Any changes to to tracked files in the working tree are discarded. git reset --soft - does not touch the index file or the working tree (but resets the head). Tis leaved all your changed files as 'changes to be committed'. git revert - creates a new commit that contains changes to revert the previous commit Errors When unable to connect when attempting to clone a repo, then run the following commands and restart the terminal. git config --global --unset http.proxy git config --global --unset https.proxy HEAD git checkout - this will detach the head and attach it to a commit instead. cat .git/HEAD - look at what HEAD is pointing to git log --graph --decorate --pretty=format:‘%C(auto,yellow)%h%Cred%>(13,trunc) %ad %C(auto,green)% - display a coloured graph of git commits Other Relative commits: ^ - move up one commit at a time ~ - moves upwards a number of times e.g. git checkout branchName~5 - note that this does not effect the branch you are currently pointing at git cherry-pick - facilitates moving commits to other branches For a good reference of .gitignore patterns, look here. To turn off tags if they appear: git config remote.origin.tagopt --no-tags Delete all local tags you may have: git tag -l | xargs git tag -d To configure git to use an external compare editor: $ git config --global diff.tool bc3 $ git config --global difftool.bc3.trustExitCode true $ git config --global merge.tool bc3 $ git config --global mergetool.bc3.trustExitCode true "},"commands/helm-commands.html":{"url":"commands/helm-commands.html","title":"Helm","keywords":"","body":"Helm About Helm is a command that streamlines installing and managing Kubernetes applications. Think of it as a homebrew for Kubernetes. It has two parts: A client - helm installed on a laptop A server - tiller. This manages releases of your charts. installed on a kubernetes cluster. receives commands from the client and deploys based on Helm charts. Charts are Helm packages that contain at least two things: A description of the package: Chart.yaml One or more templates, which contain Kubernetes manifest files. Deployments and services inside this folder. values.yml define values you can configure at deploy time. Helm charts have values file with the tags of the version numbers which have to be changed if you want to build a different version number. Helm allows you to package up your kubernetes app. Commands When a helm release has already been launched, it does not need doing again. Instead see all the launched releases with: helm ls —all helm ls -q | xargs helm del —purge Deletes all Helm releases. kubectl get deploy,pods,svc,ingress The following command indicates that the tiller-deploy deployment is available: kubectl get deployment tiller-deploy --namespace kube-system Rebuild after local src code change # Delete the helm releases that we have changed: helm list helm delete —purge # Rebuild the images: build… not sure the exact command ./build-docker-images.sh 1.0.0 To run a script that does all the building for you. #Re-install helm releases: helm install If you get a message saying that there are incompatible versions of helm: helm init --upgrade Delete pods helm delete --purge $(helm list | awk '{print $1}' | tail -5) Gets all the helm pods and deletes them "},"commands/istio-commands.html":{"url":"commands/istio-commands.html","title":"Istio","keywords":"","body":"Istio Istio allows you to: Perform traffic management via .yaml files Use Grafana to provide visualisations of metrics Create a service graph to view the interdependencies of your project Commands Istio is deployed as a series of pods within your Kubernetes cluster. helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator helm install --name devcamp incubator/istio Use istioctl for all istio command line commands echo \"http://\"$(kubectl get po -l istio=devcamp-istio-ingress -o 'jsonpath={.items[0].status.hostIP}'):$(kubectl get svc istio-ingress -o 'jsonpath={.spec.ports[0].nodePort}')\"/api-v1/productpage\" Get the url of a Kubernetes app http://127.0.0.1:3000/dashboard/db/istio-dashboard The url of the Grafana dashboard. ./istio/portForwardServiceGraph.sh "},"commands/kubernetes-commands.html":{"url":"commands/kubernetes-commands.html","title":"Kubernetes","keywords":"","body":"Kubernetes Kubernetes is IBM's strategic choice for managing multiple containers together. Kubernetes is usually provided as a service in the cloud, and IBM provides a version in its clouds. However, it can also be run locally, using a tool called minikube. (Note that the terminal window used to log in to blue mix etc. has to be the one in which you use hhelm init.) An app consists of several microservices that are deployed on a cluster as deployment resources. A deployment is the release unit of the app. (I think that deployments will create pods) Pods are groups of containers that are deployed together on the same worker node. A pod is where the application code (packaged as a Docker container) runs under a Kubernetes context. Although every pod has a unique IP address, those IPs are not exposed outside the cluster without a service. Services allow your applications to receive trafic: Services are Kubernetes resources that define a logical set of pods and a policy to assess them. Services are exposed in different ways by specifying a type. there are four types: ClusterIP, NodePort, LoadBalancer and ExternalName. Services are the abstraction that allow pods to die and replicate without affecting the performance of the application. Minikube Pods that are running inside Kubernetes are running on a private, isolated network. They are visible by other pods and services within the cluster, but not outside that network. When we use kubectl we are interacting through an API endpoint. A proxy forwards communications into the cluster-wide, private network. Commands Minikube minikube delete minikube start —memory 8192 : Increase the memory allocated. `eval $(minikube docker-env)`` Tell docker to use the reference to the docker daemon running in minikube, rather than your local docker runtime. minikube status minikube dashboard minikube ip minikube run <> minikube addons enable ingress minikube addons enable ingress minikube addons enable kube-dns This enables the ingress and kube-dns minikube addons so that we can access our microservices from our web browser. Kubernetes docker build -t Build the docker image with Kubernetes. kubectl create -f service.yaml Create a Kubernetes service. To list all the services running on kubernetes: kubectl get services To create a cluster from the command line: Login and go to the target organisation and space bx cs init bx cs cluster-create —name To save the IP address and port of something launched on the cluster: nodeip=$(bx cs workers cloudnativedev | grep -v '^*' | egrep -v \"(ID|OK)\" | awk '{print $2;}' | head -n1) And then to get it: echo \"http://${nodeip}:${port}\" To access a cluster: bx cs cluster-config Copy and paste the returned env variable into the command line. kubectl get nodes kubectl proxy Launches the Kubernetes dashboard in your browser. To find the IP address/ cluster/ troubleshoot: kubectl get nodes -o yaml if not using Minikube minikube ip if using Minikube kubectl cluster-info kubectl describe pods kubectl logs Commands can be executed directly on the container when the pods are up and running: kubectl exec And a bash session can be started for a pod: kubectl exec -ti bash This gives an open console on the container where we run our application. The cource code for the application is at To view the cluster locally via Minikube: kubectl proxy must be run to estblish a proxy so that communications can reach the private Kunbernets network. http://localhost:8001 now displays all the APIs hosted through the proxy endpoint. http://localhost:8001/api/v1/proxy/namespaces/default/pods/ This is used to access the webpage. To use a new docker image when code has changed: Check that the kubernetes is configured to the correct cluster: kubectl config current-context This should return cloudnativedev. If not set it with: bx cs cluster-config and paste the returned export command in the command line. Set the Docker image: kubectl set image deployment/bluecompute-web-deployment web-ce=ibmcase/bluecompute-web:tutorial-task8 Ensure that deployment was successful, manually validate the image name and running status: kubectl describe rs bluecompute-web-deployment 4. "},"commands/other.html":{"url":"commands/other.html","title":"Other","keywords":"","body":"Other Commands Technologies that only have a few commands notes have been bunched together here. Atom Shift + Cmmd + M This gives a markdown viewer so you can see the formatting of your markdown code. Eclipse Class Paths The PATH environment variable is a series of directories in which Windows looks fro programs. It allows you to be able to conveniently run the executables from any directory without having to type the full path of the command. N.B. Windows accepts both / and \\ as folder separators within a path, and works just as well within PATH. N.B. Windows treats consecutive folder separators as one logical separator, i.e. C:\\FOLDER\\\\ == C:\\FOLDER\\ To check is PATH already contains a pathm we need a way to convert any given path into a canonical form, due to the reasons above (and further syntax points). To do this the ~s modifier is used to remove enclosing quotes. We use FINSTR regular expressions to classify a path as wither qualified or relative. A normal qualified path must start with :, whilst a UTC path always starts :. The Uniform Naming Convention (UNC) Path defines the location of a resourse on a network. it works on a network level rather than an operating system level, and so has to have a global standard. Mapped drives are specific to certain computers. Commands IntelliJ cmmd + backspace : deletes the line the cursor is on. To debug a server wlp/bin ./server debug Look for 'Attach to process' and select the relevent option DB2 Error Messages 204 - Missing column bash and zsh source . The above two commands are the same except source always searches the current directory first before the rest on the $PATH. bash and exit Enters and then leaves bash. PS1='\\W# ' Use this to change what information appears in the terminal prompt. The following to be out in order when I have time: To return the shell that you are using: echo $SHELL -e: Enable interpretation of backslash escape sequences source activate iaml source deactivate iaml Use this to activate the vm (for Edinburgh ML project) mv Change the name of a directory conda info -e See what anaconda virtual environment I am in unzip file.zip -d Unzip to a specific folder Jenkins agent docker - Gradle Notes The Gradle Wrapper considtd of four files: /gradlew /gradlew.bat /gradle/wrapper/gradle-wrapper.jar /gradle/wrapper/gradle-wrapper.properties …and can be further optimised with... /build.gradle Commands Ruby rvm use ruby-2.4.2 —default Specify a specific version of Ruby to use. NodeJs SQL Notes tty is a Unix commadn that displays to standard output the name of the terminal connected to standard input. These are commonly used as a way to get access to the computer to fix things without having to log into. Slack ctrl + backtick Moves focus to the next section. cmmd + K Quick switcher. cmmd + / See a list of all the shortkeys. Chrome cntrl + shift + delete Delete history. Liberty server is the command used to action Liberty commands from the command line. * server package --archive= --include=all Maven To use maven in a session: Set the JAVA_HOME variable: which java export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home Add maven to the path export PATH=/opt/apache-maven-3.5.4/bin:$PATH "},"commands/vim-commands.html":{"url":"commands/vim-commands.html","title":"Vim","keywords":"","body":"Vim About .vimrc contains customisations. Commands Insert Mode Commands :version Displays all the files that vim is using. :echo $MYVIMRC Prints the location of the .vimrc file. I - insert at the beginning of the line A - insert at the end of a line ZZ - Quits Vim. D - Deletes the whole current line. ctrl + n - autocomplete for key words. Non-Insert Node Commands u - undo ctrl + r - redo ctrl + n - switch between relative and absolute line numbering. [relative line number] + j - jumps to the relative line number forward [relative line number] + k - jumps to the relative line number backward shift + arrows Moves the cursor to the next or previous word Search: / : searches forward / : searches backwards n : repeat forward search N : repeat backwards search * : search for the word currently under the cursor :%s/search_for_this/replace_with_this/c : search and replace with confirm. saveas Creates a new file with the given name in the current folder. gg This will move the cursor to the beginning of the file. Note that it will not appear on the screen, which took me a little by surprise. dG This will delete the whole file. dd This will delete the line under the cursor. yy Similarly, to copy five lines in vim, use the yank command again, but precede it with the number 5: Vim-Latex Commands :ver - Check the version \\rf - Folds all the sections in the file up. * Other I downloaded pathogen. This means that any plugins you wish to install can be extracted to a subdirectory under ~/.vim/bundle, and they will be added to the 'runtimepath'. Observe: cd ~/.vim/bundle && \\ git clone https://github.com/tpope/vim-sensible.git Now sensible.vim is installed. "},"compsci/cookies.html":{"url":"compsci/cookies.html","title":"Cookies","keywords":"","body":"Cookies What is a cookie? Cookies are given to a browser by the server. The data in a cookie allows the server to 'continue a conversation', as without the cookie the server considers the browser a first-time visitor. Types of cookie Session computer browser cookies are stored in the browser but deleted when the browser shuts down. They allow the user to move from page to page within a site without the constant need to sign in. Permanent computer browser cookies are saved to the hard drive until they expire. They are used to profile users by their behaviour within the site and help the site manager monitor the performance of the website. These are only read by the company that places the cookies on the computer. Third party computer browser cookies allow ads to target a user's location and allow third party's to determine user interest by tracking the web user through browser activity. If a marketing company has rights over several popular websites, then over time they can determine a user's identifying traits such as politics, gender and income. How are they created? When surfing the internet, the Web server receives the IP address, web browser, the date and time, the link used to access the page and OS (without any usage of cookies). A domain can give a browser up to twenty cookies, each being up to 4k in size. What information do they hold? Information such as number of visits to the site, previous searches and purchases made on the site. They are a text file and as such there is no executable code in a cookie that is accepted by a computer. How are they used? Cookies can be shared with the domain only by the very same browser they were given to. Not by other browsers, even browsers on the same computer. How to I access them? You can find the cookies in your system in the Documents and Settings directory (Windows), or cookie jar. Different browsers tore cookies n different locations. Caching When you send a request to a website such as the BBC your request will go through several proxies. The request header can notify these proxies to not cache as the content may be dynamic or it could do the opposite and say that the content is not going to change for 60 seconds so it can be cached. Sometimes it could contain SSL data We have a global interceptor that detects if a request is a GET request and if so will always return PRIVATE and NO STORE. To see where this code is located look in RESTCacheControl. Note that POST requests cannot be cached as they have a body. LTPA Tokens Log out When someone is logged out of Liberty, the Lightweight Third-Party Authentication (LTPA) token that is used for SSO is removed from the cookie. The token is also removed from the local Authentication cache and the session is invalidated. Log in When opening the page, the browser will ask if you have an sso token (ltpa token). If not then the server will return what authentication type is set. If it is client cert then a 401 and authenticate client cert, or if 302 then redirect to form for basic auth. If the LTPA token is present then it is validated based on the expiration time and the encryption keys. The trackLoggedOutSSOCookies setting in the server.xml turns on tracking of the tokens that were logged out, meaning that if they are used again to log in then the user is made to authenticate. Note that this tracking only works on one server - this may cause problems when turning multi-server. Liberty "},"compsci/cpp.html":{"url":"compsci/cpp.html","title":"C++","keywords":"","body":"C++ This page describes the differences between Java and C++. Data Types Data types in C++ are machine dependent. Variables The C++ compiler does not check whether variables are initialised before they are read. This means the value of the variable will be the random bit pattern that happened to be in the memory location that the local variable occupies. Pointers and References This means that a reference can only ever be assigned and not reassigned because assignment to a reference variable means assignment to the original object that it refers to. A pointer can be assigned the address of a different target and it can be assigned a nullptr. Since a pointer is a variable it has an address of its own. When a reference's value is obtained, dereferencing is performed automatically by the the compiler and we receive the target's value immediately. To obtain its address we must use &ref. When a pointer's value is obtained, we receive the address of its target. To obtain the value of the target of a pointer we must use *ptr. Pass by References To stop unwanted modification of a value that is passed by reference, us the const keyword. Smart Pointers unique shared weak Iterator Copy constructor Move Constructor Destructor A destructor has the same name as the class but with a ~ before the name. It is called when the object goes out of scope or when the delete is called. "},"compsci/http.html":{"url":"compsci/http.html","title":"HTTP","keywords":"","body":"HTTP HTTP Status Codes (Here)[https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html] is some documentation for HTTP status codes. import javax.ws.rs.core.Response.Status; Commonly used status codes defined by HTTP, see documentation for the complete list. Additional status codes can be added by applications by creating an implementation of Response.StatusType. java.util.function.Function Functional interfaces provide target types for lambda expressions and method references. 200 - OK The request has succeeded. The information returned with the response is dependent on the method used in the request, for example: GET an entity corresponding to the requested resource is sent in the response; HEAD the entity-header fields corresponding to the requested resource are sent in the response without any message-body; POST an entity describing or containing the result of the action; TRACE an entity containing the request message as received by the end server. 201 - Created The requirements has been fulfilled and resulted in a new resource being created. The new resource can be references by the URL returned in the entity of the response. 204 - No Content The server has fulfilled the request but does not need to return an entity-body, and might want to return updated metainformation. The response MAY include new or updated metainformation in the form of entity-headers, which if present SHOULD be associated with the requested variant. If the client is a user agent, it SHOULD NOT change its document view from that which caused the request to be sent. This response is primarily intended to allow input for actions to take place without causing a change to the user agent's active document view, although any new or updated metainformation SHOULD be applied to the document currently in the user agent's active view. The 204 response MUST NOT include a message-body, and thus is always terminated by the first empty line after the header fields. 206 - Partial Content The server is successfully fulfilling a range request for the target resource by transferring one or more parts of the selected representation that correspond to the satisfiable ranges found in the request's Range header field. The server has fulfilled the partial GET request for the resource. The request MUST have included a Range header field indicating the desired range, and MAY have included an If-Range header field to make the request conditional. 302 - Found The target resides temporarily under a different URI but the user should continue to use the effective request for future requests. The server should generate a location header field in the response. 303 - See Other This indicates that the response to the request can be found under a different URI 304 - Not Modified If the client has performed a conditional GET request and access is allowed, but the document has not been modified, the server SHOULD respond with this status code. The 304 response MUST NOT contain a message-body, and thus is always terminated by the first empty line after the header fields. 400 - Bad Request The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications. 401 - Unauthorised Suggests that if authorisation is provided then the user may get access. 403 - Forbidden Suggests that: Authorisation was provided but the user is not allowed permission. Permissions are forbidden for all users. 404 - Not Found The server has not found anything matching the request url. 405 - Method not allowed The method specified in the Request-Line is not allowed for the resource identified by the Request-URI. The response MUST include an Allow header containing a list of valid methods for the requested resource. 409 - Conflict The request could not be completed due to a conflict with the current state of the resource. This code is only allowed in situations where it is expected that the user might be able to resolve the conflict and resubmit the request. The response body SHOULD include enough information for the user to recognize the source of the conflict. Ideally, the response entity would include enough information for the user or user agent to fix the problem; however, that might not be possible and is not required. 410 - Gone The requested resource is no longer available at the server and no forwarding address is known. The condition is expected to be considered permanent. 416 - Range Not Satisfiable error 500 - Internal Server Error The server encountered an unexpected condition which prevented it from fulfilling its request. 502 - Invalid Response 503 - Service Unavailable The server is currently unable to handle the request due to temporary overloading or maintenance of the server. Tge implication is that this is a temporary condition that will be alleviated after some delay. Request Parts An http request is made of constituent parts. Entity An HTTP entity is the majority of an HTTP request or response, consisting of some of the headers and the body, if present. It seems to be the entire request or response without the request or status line (although only certain header fields are considered part of the entity). In a word, Entity is an optional payload inside an http message(either request or response), so it is a \"part-whole\" relation between Entity and Message. Verbs PUT Used to create a resource, or override it. POST Used to modify and update a resource (i.e replace it in its entirety). PATCH Used when you're updating an existing resource in part. DELETE GET Directives in Headers Cacheable public Indicates that response may be cached by any cache. private Indicates that all or part of the response is intended for a single user and MUST NOT be cached. no-cache # no-store The no-store directive is to prevent the inadvrtent release r retention of sensitive information. The directive applies to the whole message and may be sent in either a response or a request. Good resource for http: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range Range The range of a http request header indicates the part of a document that the server should return. Range: =- If the server sends back ranges, it uses the 206 Partial Content for the response. If the ranges are invalid, the server returns the 416 Range Not Satisfiable error. The server can also ignore the Range header and return the whole document with a 200 status code. "},"compsci/kubernetes.html":{"url":"compsci/kubernetes.html","title":"Kubernetes","keywords":"","body":"Kubernetes In Kubernetes there are different Kubernetes hosts. Kubernetes takes care of managing hosts in clusters. By doing this this they can run containers. These containers are in pods. Pods Within pods there are containers. Also in a pod there are references to the storage. All pods are monitored and if anything goes wrong then new pods are scheduled. A service is a pod that has been made visible to the external world. Architecture There is a master node and worker nodes. Master node The api server receives commands from kubectl. etcd - scheduler - controller manager - Worker node The container engine makes it possible to run the containers. Service proxy kubelets Other Alternatives to Kubernetes include Docker Swarm and Apache Mesos and Amazon ECS and RedHat OpenShift. "},"compsci/marshelling.html":{"url":"compsci/marshelling.html","title":"Marshelling","keywords":"","body":"Marshalling and Serialisation Marshalling Marshalling is the process of transforming the memory representation of an object to a data format suitable for storage or transmission. It simplifies complex communication, using composite objects in order to communicate instead of primitives. The inverse of marshalling is called unmarshalling. It is possible for an object to the marshalled by reference, in which case the data 'on the wire' is simply location inforation for the original object. Serialisation Marshalling is about getting parameters from here to there, whilst serialisation is about copying structured data to or from a primitive form such as a byte stream. "},"compsci/microservices.html":{"url":"compsci/microservices.html","title":"Microservices","keywords":"","body":"Advanced Microservices: A Hands on Approach Chapter 1: General Benefits: Forced separation of concerns Natural team ownership Frequent deployments heterogeneous selection of programming languages Chapter 2: HTTP API Design Chapter 3: Chapter 4: Service discovery Service discovery is the process of taking the name of a service as an input and getting a network location of an instance of that service as an output. There are two possibilities: client-side and server-side. Depending on where the complexity lies, one should use the alternative method. This is required due to the fundamental structure of microservice-based applications. In monolithic applications, services invoke one another through language-specific method calls. In a traditional distributed system deployment, services run at fixed, well known locations (hosts and ports) and so can call one another using HTTP/REST. However, microservice-based applications run in either a virtualised or containerised environments in which the number of instances of a service and their locations change dynamically. Steps: A client obtains the location of a service by querying a service registry, which knows all the locations of all the services. Whilst there are some simple examples of how to build your own discovery server in the book, this is never recommended in practice. A real-world discovery service is Consul. This supports both client- and server-side discovery. Apache Zookeeper is a tool that keeps track of distributed configuration data. By itself it is not a complete service discovery tool, but one can be made when combined with Apache Curator (a layer that sits on top of Zookeeper). This later approach provides client-side discovery. Netflix Eureka makes use of client-side routing. Requests are routed round-robin style. It mostly caters to organisations hosted on AWS. Services are required to send Eureka periodic heartbeats. Ectd is a tool for distributing key/value data and making this data accessible and consistent. Again, it does not provide service discovery out the box but does have client libraries in many languages, and as such is used as a component of much larger systems. Load balancers are the original tool for providing service discovery. They are essentially a proxy that are aware of multiple service providers. Load balancers tend to have session affinity, meaning that they balance by session rather than by user. This is because if there are insecure resources then a user cannot be tracked when logged out. Chapter 5: Service State The database should be so far out of reach from the consumers that they don't know what type of database you are using. If this information does become available, even through some error, then leaky abstraction is said to have occurred. There are several types of database that are useful in different scenarios: PostgreSQL PostgreSQL is suitable when data stability, transactions, and the ability to work with different types of related data are important. PostgreSQL should not be used when your data schema is highly volatile and constantly changing. Also, if you do not need to use complex queries, but rather you only grab the data by means of an identifier, then there are simpler solutions out there. $ mkdir -p ∼/data/postgres $ docker run \\ --name my-postgres \\ -p 5432:5432 \\ -e POSTGRES_PASSWORD=hunter12 \\ -e POSTGRES_USER=zoouser \\ -e POSTGRES_DB=zoodb \\ -v ∼/data/postgres:/var/lib/postgresql/data \\ -d postgres The RETURNING statement is useful in PostgreSQL; by using it, along with a list of columns, you can get the data of INSERT, UPDATE and DELETE statements that do not normally return row data. MongoDB MongoDB is a database specialising in Redis At its heart Redis is an in-memory key/value store. Redis supports two different formats for persisting data on disk: RDB, which represents a complete snapshot of all the data in Redis in its simplest form. This is relatively expensive to generate. AOF, which contains a lost of commands required to regenerate the state of Redis. Being an in-memory key/ value storage it is the perfect tool for performing caching, so that data that is 'expensive' does not need to be generated multiple times. Again there are two different categories of caching in Redis: A LRU cache is a generic name for something that holds data and keeps track of the last time each piece of data has been accessed. When one of these caches starts to go over the limit, it will start removing entries that haven't recently been touched. To configure Redis LRU caching: maxmemory 512mb maxmemory-policy volatile-ttl It is accompanies by a maxmemory-policy, which descries the behaviour for evicting keys from memory. These include: noeviction allkeys-lru allkeys-random volatile-lru volatile-random volatile-ttl Elasticsearch Elasticsearch is a database that is specifically designed to be used for searching for data based on \"loose\" criteria. Under the hood ES is a document storage database that stores objects that can be represented as JSON. As such, it is common not to use ES as a primary data store but rather to store data required for performing search queries. Chapter 6: Consumers The main things to keep in mind when considering consumers are: Who they are. This is done by looking at a user agent or performing authentication. You need to keep track of which version of endpoints consumers are using so that you can deprecate them, or cut off users that are hogging resources of a public API. User Agents Whenever a request enters your service, it should contain a user agent, which is a string used to represent the client making the request. Whilst these are normally created using a generic library, your must ensure that they are meaningful, so that when they are used in your logs and communications that they have meaning. API Versioning The easiest means of doing this is to add a URL segment between the root location and the specific endpoint. 12 Factor Apps Twelve Factor Apps Bookinfo follows the twelve factors Codebase Dependencies All dependencies are explicitely declared in the file. Config Environment variables Backing Services No distinction made between third party and local services, which Bookinfo doesn't - it just asks for a url. Build, Release, Run Build step, release step and code in a Github repo. Port Binding \"A twelve-factor app is completely self-contained and does not rely on runtime injection of a webserver into the execution environment to create a web-facing service. The web app exports HTTP as a service by binding to a port, and listening to requests coming in on that port.\" In dev this is localhost, whilst in deployment a routing layer handles requests from a public-facing hostname to the port-bound web processes. \"This is implemented by using dependency declaration to add a webserver library to the app, such as Tornado for Python, Thin for Ruby, or Jetty for Java.\" Concurrency Bookinfo scales via pods. Microservices are concurrent processes. Disposability It runs in containers (via kubernetes). Each microservice is a pod, and kubernetes' container functionality will spin up another if one goes down. Dev/ prod parity The developers who wrote code are closely involved in deploying it and watching its behaviour in production. Development and production are kept as similar as possible. For example, the same Time between deploys can be kept to hours, not weeks. Where Bookinfo does not follow the twelve factors Logs There is no logging in the basic Bookinfo, but with Istio there is. Process \"Twelve-factor processes are stateless and share-nothing. Any data that needs to persist must be stored in a stateful backing service\" - Bookinfo does not do this, it stores it statically.\" Admin \"Twelve-factor strongly favours languages which provide a REPL (Read-Eval-Print Loop) out of the box. \" Containers and Microservices (These notes are taken from this tutorial) Microservices revolve around scaling out instead of scaling up - i.e. instead of adding more RAM to a microservice runtime, we simply get another microservice runtime of the same kind. This leads to the need to manage a multitude of services. Another underlying concept is that when a service has been deployed, they cannot be changed. When an update is required, a new cluster of containers should be spun up and the old ones torn down. Microservices and WAS Liberty https://developer.ibm.com/wasdev/docs/microservices/#context Using JWTs to secure Microservices A single request from a client can lead to multiple requests between the multiple independently deployable services that comprise an app, and these communications should be kept secure: you want to know that any given request is being handled by any given service originated from a known user. Authenticating microservices using JWTs Secure microservices with API keys JWT Github example Liberty example code Liberty 12 factor tutorial A JSON Web Token JWT is a like a small document stating who the user was, when the request was made, and possibly other information such as what the request was for. Once identity is established, signed JWTs can be used to pass on that identity to other microservice invocations. Each consumer of the token is able to verify that they can trust the claims made by it, by verifying that they trust the signature of the token. Once a consumer verifies the signature, theu know the content of the token has not been altered after it was signed by the person they trust. API gateway model In displaying a single-page, an app may need to interact with several different microservices. If the client talks to each of the microservices directly then every time a microservice was refactored then updates would need pushing to all the devices that use the client. The API gateway pattern addresses this; it acts a front controller - a single logical point of entry into the application. Liberty microservices Steps when building a microservice from scratch Auto generate microservice using IBM Microservice Builder bx login bx dev create // creates the artifacts, dockerfile, helm chart, jenkinsfile bx dev build bx dev run // can access at http://localhost:9080/[project]/v1/example // Create an overrides.yaml at chart/overrides.yaml minikube start minikube docker-env docker build [appname] helm install chart/[appname] // create configmap.yaml in chart/webapp/templates Manually generate the parts needed for a Java, Liberty Microservice General readme .gitignore Charts mkdir chart mkdir webapp mkdir templates // copy templates directory // copy .helmignore file into chart directory touch Chart.yaml // into webapp directory touch values.yaml // fill with values for templates Liberty Create a 'dynamic web project' and hook it up to WAS Create a new maven project, which creates things like the pom.xml Security Under the server tab click on server configuration Add webSecurity2.0 to the feature management Add basic user registry to the server configuration box on the left # web.xml To create a stub for the web.xml (or deployment descriptor) then right-click on the project name > Java EE tools > deployment descriptor stub Docker Dockerfile and a .dockerignore Java 1. Set up Database docker pull mysql/mysql-server:latest docker run --name=mysql01 -d mysql/mysql-server:latest docker logs mysql01 # Copy the temporary password docker exec -it mysql01 mysql -uroot -p # Log into the container ALTER USER 'root'@'localhost' IDENTIFIED BY 'newpassword'; # Change the password "},"compsci/other.html":{"url":"compsci/other.html","title":"Other","keywords":"","body":"Other Programming # Transactional Model Transaction processing is information processing that is divided into individual, indivisible operations called transactions. Each transaction must succeed or fail and can never be partially complete. Cache Invalidation Cache invalidation is when entries in a cache are replaced or removed. Strong Identifiers An identifier refers to the name given to entities such as variables, functions, and structures. They must be unique as they are used to identify the entity during the execution of a program. Canonical Path A canonical path is a unique path that allows comparison between paths. It is normally the shortest absolute path (shortest in terms of string-length). A canonical ath will resolve any aliases, shortcuts or symbolic links that lie on the path into the actual directories to which they refer. Providers Providers are used to inject objects of smaller scope into a larger scoped bean. Injecting Provider instead of merely T allows one to: Retrieve multiple instances Having Provider instead of just T allows you to access multiple instances, each of which you can safely mutate and discard. Lazy retrieval of an instance Break circular dependencies Providers are used in numerous means by Guice. TODO: Providers can be used instead of factories. As they do not take arguments, its a means of getting an object. See the code on line 154 of ChartResourceModule for an example: bind(new TypeLiteral>() { }) .to(DeduplicateDataRecordsPredicate.class); Lazy Evaluation This is when you delay the evaluation of an expression until its value is needed. Tuple In mathematics a tuple is a finite ordered list. Common Gateway Interface (CGI) Historically, different server software would use different ways to exchange the information required by HTTP for a response to requests (eg. status, content, doc type). As a result it was not possible to write scripts that would work unmodified on different server software, so the CGI standard was established. .DS_STORE file The .DS_STORE file (Desktop Services Store) contains the custom attributes of its containing folder, such as the position of icons or the choice of background image. It is created and maintained by the finder application. Its equivalent in Windows is the desktop.ini file. Imperative and Declarative Programming Languages Imperative is do this, then do that, then do the next thing and so on. Declarative is, this are the rules, now what's the answer to this question Command Query Responsibility Segregation \"At its heart is the notion that you can use a different model to update information than the model you use to read information. For some situations, this separation can be valuable, but beware that for most systems CQRS adds risky complexity\". TODO Hardware When reading data from a file or a disk the processor needs to wait for the file to be read. Problems can arrive around the issue of access time, which is the time it takes for a computer to process a data request from the processor and then retrieve the required data from the storage device. Since disk drives are mechanical there is a wait whilst the disk rotates to the required disk sector. Other Scalable Vector Graphics (SVGs) SVGs are an xml-based vector image for two-dimensional images and graphics. The benefits of this are: This allows the images to be searched, indexed, scripted and compressed. They can be created and edited with any text editor. URIs, URLs and URNs Uniform Resource Identifier This is just an identifier. Uniform Resource Locator A URL is a locator as well as an identifier, which means that it contains information that can be used to fetch a resource from its location and that every URL is also a URI. URLs always start with a protocol (e.g. http) and usually contain information such as the network host and often a document path. Unique Resource Name URNs should be unique across both space and time, and are thus have a stricter uniqueness constraint. Swap file Alternatively referred to as a page file or paging file, a swap file is a file on a hard drive that is used as a temporary location to store information not being used by the computer RAM. By using a swap file, a computer can use more memory than what is physically installed in the computer. However, if the computer is low on drive space the computer can run slower because of the inability of the swap file to grow. Shared Resource A shared resource, or network share is a computer resource made available from one host to other hosts on a computer network. It is a device that can be remotely accessed from another computer, typically on a LAN or an enterprise internet, transparently as if it were a resource on the local machine. localhost LDAP (Lightweight Directory Access Protocol) The Lightweight Directory Access Protocol is an open, vendor-neutral, industry standard application protocol for accessing and maintaining distributed directory information services over an Internet Protocol (IP) network. Single page application A single-page application (SPA) is a web app that interects with the user by dynamically rewriting the current page rather than loading entirely new pages from a server. The page does not reload at any point, not does control transfer to another page, although a location has can be used to provide the perception of separate logical pages in the app. Location hashes Fragment Identifier A fragment identifier is a short string of characters that refers to a resource that is subordinate to another, primary resource. Source-to-source compiler / Transpiler A transpiler is a type of compiler that takes the source code of a program written in one programming language Tracing Tracing involves a specialised use of logging to record information about a program's execution, normally for debugging. Atomic Making an operation atomic consists of using synchronisation mechanisms in order to make sure that the operation is seen, from any other thread, as a single operation. That means that any other thread will see the value of an atomic assignment either before the assignment or after the assignment, but never in an intermediate state. Opaque and Transparent data types In computer science, an opaque data type is a data type whose concrete data structure is not defined in an interface. This enforces information hiding, since its values can only be manipulated by calling subroutines that have access to the missing information. The concrete representation of the type is hidden from its users, and the visible implementation is incomplete. A data type whose representation is visible is called transparent.[1] Opaque data types are frequently used to implement abstract data types. ASCII (Here)[http://www.asciitable.com/] is a table of all the ASCII characters. Regex (Here)[https://www.rexegg.com/regex-quickstart.html#ref] is a good regex guide. (a|b) means look for either the letter a or the letter b [^a] means not a. ? means once or none UTF-8 and UTF-16 In UTF-8 a character may occupy a minimum of 8 bits whilst in UTF-16 a character starts with 16 bits. The pros of UTF-8: As all latin characters without accents occupy one byte they are identical to US-ASCII, meaning that all UTF-8 are valid US-ASCII. This provides good backwards compatibility. UTF-8 is independent of byte order, nullifying the big-endian/ little-endian issue. The cons of UTF-8: Many common characters have different length, which slows indexing by codepoint. UTF-8 still often has BOM (byte order mark) The pros of UTF-16: Endianness Endianness refers to the sequential order in which bytes are arranged into larger numerical values when stores in memory. In big-endian format the MSB is stored first, i.e. has the lowest address. Little-endian format reverses this order. Code Point In character encoding a code point is any of the numerical values that make up the code space. For example ASCII is comprised of 128 code points. Darwin Information Typing Architecture (DITA) DITA is an XML data model for authoring and publishing. An authoring system is a program that has pre-programmed elements for the development of interactive multimedia software titles. They are programs that allow a non-programmer to easily create software. Translation Files with gettext gettext is a standard GNU translation system which can be used with PHP. Portable object (.po) files are plain text files that contain your translation which can be safely edited by hand. When edited each .po file must be indexed with the following: msgfmt mydomain.po -o mydomain.mo This produces a machine object (.mo) file indexing your translation for quick access. You then have to translate this file in other languages. WAR vs. JAR .jar files contain the libraries, resources and accessories files. .war files contain the web application that can be deployed on any servlet. They contain jsp, html, javascripts files necessary. .ear files contain the EJB modules of the application. Makefile By default, Makefile targets are \"file targets\" - they are used to build files from other files. Make assumes its target is a file, and this makes writing Makefiles relatively easy: foo: bar create_one_from_the_other foo bar However, sometimes you want your Makefile to run commands that do not represent physical files in the file system. Good examples for this are the common targets \"clean\" and \"all\". Chances are this isn't the case, but you may potentially have a file named clean in your main directory. In such a case Make will be confused because by default the clean target would be associated with this file and Make will only run it when the file doesn't appear to be up-to-date with regards to its dependencies. These special targets are called phony and you can explicitly tell Make they're not associated with files, e.g.: .PHONY: clean clean: rm -rf *.o Hash functions SHA-1 is a cryptographic hash function. DNS Cache A DNS cache is a temporary database maintained by the OS that contains records of all the recent visits and attempted visist to internet domains. The DNS cache attempts to speed up the IP lookup by handling the name resolution of recently visited addresses before the request is sent out to the internet. The contents of the cache can be viewed on Windows with the command ipconfig /displaydns. A DNS cache becomes poisoned or polluted when unauthorised domain names or IP address are inserted into it. To solve this you can flush the cache, which forces your computer to repopulate those address the next time ypou try accessing those websites. In Windows this is achieved with ipconfig /flushdns. On Mac you should use dscacheutil -flushcache. Contant-addressable Memory (CAM) CAM is used in very-high-speed searching applications. It is also known as associative memory. Unlike RAM in which a user supplies a memory address and the RAM returns the data word at that address, CAM is designed such that the iser supplies a data word and the CAM searches its entire memory to see if that data word is stored anywhere in it. If it is found then a list of the storage address where it was found. It is the hardware embodiment of an associative array. Character Encoding A code point or code position is any of the numerical values that make up the code space. For example ASCII comprises 128 code points in the range 0hex "},"compsci/ports.html":{"url":"compsci/ports.html","title":"Ports","keywords":"","body":"Ports A port is an endpoint of communication in an operating system. A port is always associated with an IP address of a host and the protocol type of the communication, and this completes the destination or origination network address of a communication session. A port is identified for each address and protocol by a 16-bit number, commonly known as a port number. Scanning Ports on MacOS ifconfig | grep \"inet \" | grep -v 127.0.0.1 This returns the IP address, stripping out useless information and the localhost. NB. 127.0.0.1 is the loopback Internet Protocol Address. It is used to establish an IP connection to the same machine being used by the end user. One can go to Network Utility, in System Preferences, to perform a port scan and see what ports are in use. Also, the following returns a summary of all the port usage: netstat -n : Show network addresses as numbers (as opposed to symbolically). -a : With the default display, show the state of all sockets; normally sockets used by server processes are not shown. -p : Show statistics about protocol, which is either a well-known name for a protocol or an alias for it. A null response typically means that there are no interesting numbers to report. The program will complain if protocol is unknown or if there is no statistics routine for it. Opening a port nmap (needs installing via brew) -p localhost : Check on the status of a port. To open a port: sudo vim /etc/pf.conf Closing a port To see what is occupying a specified port number, the following methods can be used: sudo lsof -i : /interesting/ Will return the PID netstat -nap | grep \"80\" ps -aef | grep -i // Will return the name of the process This will give you a process ID (PID) which can then be used to close the port: sudo kill -9 The -9 refers to the signal number. These include, in order in which they should be tried (though note the only one that actually completely removes the bind is KILL, so this should be often be used): 15 - TERM (software termination signal) 1 - HUP (hang up) 2 - INT (interrupt) 9 - KILL (non-catchable, non-ignorable kill) "},"compsci/security.html":{"url":"compsci/security.html","title":"Security","keywords":"","body":"Security Attacks Cross-Origin Resource Sharing (CORS) Definition This allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource was shared. CORS defines a way in which a browser and server can interact to determine whether or not it is safe to allow the cross-origin request. It describes new HTTP headers to request remote URLs only when they have permission. CRDF Cross-Site Request Forgery is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated. Same Origin Policy A browser keeps a cookie that keeps a user authenticated to a site. Even when you leave that site a potential attacker can use this to gain access. However, the origin of the request will be different and so a same origin policy can be implemented to ensure that Defense Secure Sockets Layer (SSL) Transport Layer Security (TLS) and SSL are cryptographic protocols that provide communications security over a computer network. The TLS protocol comprises of two layers: the TLS record and the TLS handshake. Note the difference between client and user certificates: Client Certificate Authentication A client digital certificate is a file that is loaded onto a client application that contains pertinent information such as a digital signature, certificate authority, etc. At the start of a SSL or TLS session the server may require the client application to submit a client certificate for authentication. Client certificates are used less frequently as they have to be installed on client applications, which is tedious for admins and less user friendly. Steps: Client introduces itself to the server, getting a set of security-related information. Server responds with a server certificate. If the server is configured, the client certificate authentication is initiated. Server Certificates CA certificates are the certificates that a browser has that can be used to verify the digital signature found on the server's certificate. On these certificates is a copy of the public key of the Certificate Authority (CA) who might issue/sign your server certificate. Getting a certification signed by a CA The process is started by generating a private/ public key pair, followed by a certificate signing request (CSR) SSL handshake Process in which the browser uses the public key of a CA to authenticate. Managing Client Certificates A keystore is a repository where private keys, certificates and symmetric keys are stored. It normally takes the form of a file. Self-signed Certificates Inspect with the keytool commands. keytool -list -v -keystore path_to_keystore_file # Check if the keystore file exists Use the securityUtility command line tool to create the certificate. securityUtility createSSLCertificate --server=server_name --password=your_password OR keytool -genkeypair -alias -keyalg RSA -keysize 2048 -keystore /Users/edwardstevinson/RTC-trunk/Projects/Deployment/build/toolkit/configuration/security (opt) Get the certificate signed by a CA. Export the certificate to a certificate file, with the extension .cert. keytool -export -alias alias_name -keystore path_to_keystore_file -rfc -file path_to_certificate_file Generates a key pair (a public key associated with a private key). It wraps the public key in an X.509 v3 self-signed certificate, which is stored as a single-element certificate chain. The certificate chain and private key are stored in a new keystore entry identified by an alias. It takes the following arguments: keyalg dname keypass Install the certificate on the client. Chrome: Go to chrome://settings and click on manage certificates. Windows: Use certmgr to look at trusted certificates. Create a truststore on the server. Types of certificate .pem, .cer and .der are all file extensions for files that usually contain a X.509 v3 certificate. DER is the method of encoding the data that makes up the certificate. DER itself could represent any kind of data, but usually it describes an encoded certificate or a CMS container. The structure of a certificate is described using the ASN.1 data representation language. BER and DER are binary encoding methods for data described by ASN.1. PEM is a method of encoding binary data as a string (ASCII armor). It contains a header and a footer line (specifying the type of data that is encoded and showing begin/end if the data is chained together) and the data in the middle is the base 64 data. In the case that it encodes a certificate it would simply contain the base 64 encoding of the DER certificate. PEM stands for Privacy Enhanced Mail; mail cannot contain unencoded binary values such as DER. .cer just stands for certificate. It is normally DER encoded data, but Windows may also accept PEM encoded data. You need to take a look at the content (e.g. using the file utility on posix systems) to see what is within the file to be 100% sure. .p12 includes the private key whilst the .der file does not OpenSSL Certificates OAuth OAuth is an open standard for the access delegation - used as a way to give applications access to a user's information without giving them the password. It provides secure delegated access. It is designed to work specifically with HTTP. It allows access tokens to be issued to third-party clients by an authorisation server. The third party then uses the access token to access the protected resources hosted by the resource server. OAuth defines four roles: Resource owner - the end-user Resource server - the protected asset Client - the application that needs to obtain a token in order to access the resource server. Complexity is shifted to the auth server meaning that the client-side logic is simple. Authorisation server - dedicated server for issuing the access tokens to the client, after successfully authenticating the end-user and making sure the requested access can be granted, by obtaining consent from the end-user, by applying a policy , or some other mean. A client provides a valid grant in order to obtain an access token. There are many types of grant; the correct one to use is dependent on the type of client in use. Click (here)[https://connect2id.com/learn/oauth-2] for a full list but includes authorisation codes, implicit, password, client credentials, etc. The process is as follows: The client initiates the code flow by redirecting the browser to the authentication server with an authorisation request. At the authorisation server the user will be authenticated by checking if they have a valid session (established by a browser cookie) TODO: Finish. See link above. Encoding Passwords securityUtility encode Use the above to encode a string password. NB. securityUtility is in i2Analyze/wlp/binary NB. On windows keytool is lcoated at NB. gskcmd is not on mac NB. /Users/edwardstevinson/RTC/ProjectX_Server/Build/Fetched/Tools/Java/jre/bin is the location of ikeyman on mac NB keytool is at C:\\Users\\Ed\\Desktop\\i2\\Initial setup\\DB2\\ibm_datastudio4120_win\\disk1\\InstallerImage_win64\\jre_6.0.0.sr9_20110208_03\\jre\\bin on my windows box AppScan AppScan is intended to test web applications for security vulnerabilities during the development stage, when it is least expensive to fix such problems. "},"compsci/solr.html":{"url":"compsci/solr.html","title":"Solr","keywords":"","body":"Solr Intro Solr is a scalable, ready-to-deploy enterprise search engine that's optimised for large-volume text centric data, i.e. a specific NO-SQL technology. It returns results sorted by relevance. it has two main functionalities: indexing data and performing queries. Capabilities Keyword search box Spell-checking Synonym handlingPhrase queries Text-analysis Geospacial queries Faceting Shows features of the documents in result sets Terminology Solr is built on Apache Lucene, which is a Java-based retrieval library. An inverted index is a specialised data structure for matching query terms to text-based documents. MapReduce is a programming model that distributes large-scale data-processing operations across a cluster of commodity servers by formulating an algorithm into two phases: map and reduce. i2 http://localhost:8983/solr/#/~cloud The above location is used to access the UI for the local Solr instance. "},"compsci/threads.html":{"url":"compsci/threads.html","title":"Threads","keywords":"","body":"Threads # Unlike forking, multi-threaded processes share the same data area and CPU. The life cycle of a thread is: new, runnable, running, waiting, dead. Threads have a priority associated with them, ranging from low (10) to high (1). # Step 1 As a first step, you need to implement a run() method provided by a Runnable interface. This method provides an entry point for the thread and you will put your complete business logic inside this method. Step 2 Step 3 Synchronisation Multiple threads can try to access the same resource and produce unforeseen consequences. To counteract this there is a need to synchronise the action of multiple threads to make sure that only one can access a particular resource at any given point. This is achieved with monitors. Each object in Java is associated with a monitor, which a thread can lock or unlock. Only one thread at a time may hold a lock on a monitor. Synchronised blocks are used to create threads and synchronise their tasks. Use synchronized() Interthread Communication wait() Causes a thread to wait until another thread invokes the notify(). notify() Wakes up a single thread that is waiting on this object's monitor. notifyAll() Wakes up all the threads that called wait() on the same object. Deadlock Deadlock is the situation where two or more threads are clocked forever, waiting for each other. Locks ReentrantLock A reentrantlock is owned by the thread last successfully locking, but not yet unlocking it yet. Java Threads To solve the thread problem with lazy initialisation and singletons in a multi-threaded program one could declare the getInstance() method as synchronized. However, this comes with a large overhead as every time the method is invoked it has to go through the process of waiting for the lock and then obtaining the lock. A solution is to use the double checked locking. "},"compsci/webapp.html":{"url":"compsci/webapp.html","title":"Web Applications","keywords":"","body":"Java Dynamic Web Apps Requests The pattern that we use for our web services: Class for a client request. Class for a server response. A response builder for populating the response. A request handler which processes the info in the request, such as translating a client id to a server id. Servlets Web servers are good for static content but they don't know how to generate dynamic content or save to databases. Java Servlet and JSPs are server side technologies to extent the capability of web servers by providing support for dynamic response and data persistence. To create HTML use the following class: HttpServletResponse JSPs A JSP is a view technology which provides template to write plain vanilla HTML/CSS/JS in and provides the ability to interact with the backend Java code. Security See (here)[https://www.redbooks.ibm.com/redbooks/pdfs/sg248076.pdf]. Deployment Descriptor (web.xml) Google documentation on the parts of the web.xml can be found (here)[https://cloud.google.com/appengine/docs/standard/java/config/webxml]. Inside Eclipse we store files used for the development of the web application within a project folder. The files within the project are used for building the web application and are not necessarily used as a deployable unit of work. We will keep the folders and files that comprise a deployable instance of the web application in a folder called web, which is stored within the project. Every Java Web application has a deployment descriptor that is located at WEB-INF/web.xml, relative to the root of the deployable folder. Because we store all deployable objects under a folder called web, this deployment descriptor will be located at web/WEB-INF/web.xml. The web.xml file configures several aspects of the Web application, the most important information being the servlets and the url-patterns that lead to their invocation. We will initially create a single servlet and have it invoked when the URL requested by the browser matches the url-pattern /home. To configure this, do the following. Expand the web folder. Right-click on the WEB-INF folder and select New ... File. Specify a name of web.xml and click the OK button. In the text editor window that appears for web.xml, insert the contents of the following code listing, and save the file. If you can not edit the web.xml file in the window that Eclipse provides, it is because Eclipse is using the XML editor to provide access to the file. Close this window and right click on web.xml in the Project Explorer view and select Open With ... Text Editor. Deployment Descriptor web.xml home website.web.HomeServlet home /home Note: make sure there is no leading space in the web.xml file. In other words, the file should start with without any space before the left angle bracket. The url-pattern /home is relative to the context path that identifies the website Web application. Although we haven't specified this yet, the context path will be /website. This means, for a browser to invoke the home servlet, it must request the following URL. http://localhost:8080/website/home The deployment descriptor can be used to tell tomcat many things. However, the most basic information provided in a deployment descriptor are the servlets and their associated url patterns. For each servlet in your web application, there should be a servlet element, such as the following. home website.web.HomeServlet The above servlet element tells the web container to create an instance of website.web.HomeServlet and call that instance by the name home. Although it is possible to create additional instances of HomeServlet, normally a single instance is made. In addition to creating servlet instances, the web container should associate url patterns with these instances, so that when the web container receives an HTTP request from a web browser, it can determine which servlet to use to process the request. The following servlet-mapping element in our deployment descriptor tells tomcat that all incoming requests for home should be processed by the servlet instance with name home. home /home Multiple servlet-mapping elements can be used to associate any number of url patterns with a single servlet instance. Manifest file manifest.yml A single manifest file deploys all the microservices. It controls the deployment of the microservices and allows us to pass additional environment variable as needed. Implementation Liberty microservices Steps when building a microservice from scratch Auto generate microservice using IBM Microservice Builder bx login bx dev create // creates the artifacts, dockerfile, helm chart, jenkinsfile bx dev build bx dev run // can access at http://localhost:9080/[project]/v1/example // Create an overrides.yaml at chart/overrides.yaml minikube start minikube docker-env docker build [appname] helm install chart/[appname] // create configmap.yaml in chart/webapp/templates Manually generate the parts needed for a Java, Liberty Microservice General readme .gitignore Charts (helm) mkdir chart mkdir webapp mkdir templates // copy templates directory // copy .helmignore file into chart directory touch Chart.yaml // into webapp directory touch values.yaml // fill with values for templates Liberty Create a 'dynamic web project' and hook it up to WAS Create a new maven project, which creates things like the pom.xml Security See here. Under the server tab click on server configuration Add appSecurity2.0 to the feature management Add basic user registry to the server configuration box on the left Add users and groups Create a web.xml (see below) Add the following, which creates a autherisation constraint in the web.xml: ```xml Secured HTML Resources /* AuthenticatedUser FORM Form-Based Authentication Area /login.html /loginError.html 1. Now need to bind the application and the server. server.xml>application>add>application binding>add>security role>name then add>group>name to match the group created earlier ####### web.xml To create a stub for the web.xml (or deployment descriptor) then right-click on the project name > Java EE tools > deployment descriptor stub * `` * `` * `` ##### Docker 1. Dockerfile and a .dockerignore ##### Java 1. ##### Create gradle NB. Ensure gradle is installed with `brew install gradle`. 1. Run init gradle init --type java-application // Generate all the defaults ./gradlew build // The report from this can be found at build/reports/tests/test/index.html ./gradlew tasks ./gradlew run ##### Attach mysql db docker run --name db -d -e MYSQL_ROOT_PASSWORD=123 -p 3306:3306 mysql:latest mysql -uroot -p123 docker exec -it db /bin/bash ``` The java steps are as follows: Create a Java Connection to the MySQL database Define the SELECT statement Execute the SELECT query, getting a Java ResultSet from that query Iterate over the ResultSet, getting the database fields (columns) from each row of data that is returned Close the Java database connection Catch any SQL exceptions that may come up during the process Server.xml For a list of all the possible specifications in the server.xml file, see this page. postParamSaveMethod : POST parameters are stored upon redirect. Valid values are cookie, session and none To create a cluster from the command line: Login and go to the target organisation and space bx cs init bx cs cluster-create —name To save the IP address and port of something launched on the cluster: nodeip=$(bx cs workers cloudnativedev | grep -v '^*' | egrep -v \"(ID|OK)\" | awk '{print $2;}' | head -n1) And then to get it: echo \"http://${nodeip}:${port}\" To access a cluster: `bx cs cluster-config `` Copy and paste the returned env variable into the command line. kubectl get nodes : to ensure pointing at the right thing kubectl proxy Launches the Kubernetes dashboard in your browser. To find the IP address/ cluster/ troubleshoot: kubectl get nodes -o yaml if not using Minikube minikube ip if using Minikube kubectl cluster-info kubectl describe pods kubectl logs Commands can be executed directly on the container when the pods are up and running: kubectl exec And a bash session can be started for a pod: kubectl exec -ti bash This gives an open console on the container where we run our application. The cource code for the application is at To view the cluster locally via Minikube: kubectl proxy must be run to estblish a proxy so that communications can reach the private Kunbernets network. http://localhost:8001 now displays all the APIs hosted through the proxy endpoint. http://localhost:8001/api/v1/proxy/namespaces/default/pods/ This is used to access the webpage. To use a new docker image when code has changed: Check that the kubernetes is configured to the correct cluster: kubectl config current-context This should return cloudnativedev. If not set it with: bx cs cluster-config and paste the returned export command in the command line. Set the Docker image: kubectl set image deployment/bluecompute-web-deployment web-ce=ibmcase/bluecompute-web:tutorial-task8 Ensure that deployment was successful, manually validate the image name and running status: kubectl describe rs bluecompute-web-deployment 4. "},"compsci/websockets.html":{"url":"compsci/websockets.html","title":"Websockets","keywords":"","body":"Web Sockets A WebSocket is a communications protocol, providing full-duplex communication over a single TCP connection. WebSocket is a different TCP protocol from HTTP (though both are level 7 in the OSI model). The WebSocket protocol enable interaction between a browser and a web server with lower overheads, facilitating real-time data transfer from and to the server. Full Duplex A full-duplex (FDX) system (or double duplex) allows communication in both directions and, unlike half-duplex, allows this to happen simultaneously. An example of a full-duplex system would be a landline telephone. Other Half-open socket is caused when one side of the HTTP proxy is open and the other is closed, leading to a situation where the server thinks that everything is OK. "},"compsci/windows.html":{"url":"compsci/windows.html","title":"Windows OS","keywords":"","body":"Windows OS Administrative Shares Administrative shares are hidden network shares. To access them open package explorer and type in the url followed by the disk path, eg. test.com\\c$. Disk Volumes and Partitions A volume or logical drive is a single accessible storage area with a single file system, typically resident on a single partition of a hard disk. A partition or disk slicing is the creation of one or more regions within a hard disk or secondary storage so that the OD can manage the information in each region separately. "},"java/annotations.html":{"url":"java/annotations.html","title":"Annotations","keywords":"","body":"Annotations General Annotations are used for compiler instructions, build-time instructions and runtime instructions. Annotations are used at build time. The build process is typically done by an automatic build tool, and annotations allow a means to provide specialised instructions. Normally annotations are not present in the Java code after compilation. Built in Annotations The three built in Java annotations are: @Deprecated, @Override and @SuppressWarning. The Deprecated annotation marks a class, method or field as deprecated, implying that it should no longer be used. As a result the compiler will give a warning whenever something that has been marked as deprecated is used. @Retention(value=RUNTIME) Indicates how long annotations with the annotated type are to be retained. If no retention annotation is present on an annotation type declaration the retention policy defaults to RetentionPolicy.CLASS. @Target(value=ANNOTATION_TYPE) Indicates the kinds of program element to which an annotation type is applicable. Defaults to any program element. Custom Annotations Custom annotations are created with the keyword@interface. These are defined in their own file, just like a class or an interface. Many APIs require a lot of boilerplate code, for example JAX-RPC services require paired interfaces and implementation and JavaBeans require a BeanInfo class to be maintained in parallel. Once an annotation is defined, it can be used to annotate declarations. An annotation is a special kind of modifier, that can be used anywhere that other modifiers (such as public, static or final) can be used, and by convention precede all of them. Syntax @Entity(tableName = \"vehicles\") This is how you provide values into an annotation. Return types are limited to String, Class and enums. API Entity @Entity Entities are lightweight persistence domain objects. They typically represent a table in a relational database, and each entity instance corresponds to a row in that table. Basic @Basic Basic signifies that an attribute is to be persisted. "},"java/collections.html":{"url":"java/collections.html","title":"Collections","keywords":"","body":"Collections Lists Collections.emptyList() gives an empty list. There are Lists and Lists. Lists.newArrayList used to create. Deletion The subList() method can be used to delete part of a list. The method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a list can be used as a range operation by passing a subList view instead of a whole list. For example, the following idiom removes a range of elements from a list: list.subList(from, to).clear(); Sets API contains() Returns true if and only if this set contains an element e such that (o==null ? e==null : o.equals(e)). Tree Sets java.util.TreeSet This is a NavigableSet implementation based on a TreeMap. The elements are ordered using their natural ordering or by a Comparator provided at set creation time. This implementation guarantees a log(n) time cost for the basic operations (add, remove and contains). Maps Tree Maps java.until.TreeMap Sorted in a similar manner to the TreeSet. TreeMap is a SortedMap. SetMultiMap // TODO Maps Map> HashMaps HashMaps and null When a null is passed as a key to a HashMap it is handled as a special case: put() and get() A null key is put in bucket 0 and the value passed into the method is put as the value. This means that the get() method then returns the value in bucket 0 LinkedHashMap LinkedHashMap // TODO MultiMap MultiMap An object that maps keys to collections of values. It extends Map, adding a few new methods that accept values of V directly, rather than values of Collection. ListMultiMap A Guava class. A MultiMap that can hold duplicate key-value pairs and that maintains the insertion ordering of values for a given key. "},"java/compare.html":{"url":"java/compare.html","title":"Comparison with other languages","keywords":"","body":"Comparison With Other Languages Comparison with C References vs. Pointers Usually Java references will be implemented as pointers but there may be an extra layer of indirection to enable easier garbage collection. The major difference is that you can't do pointer arithmetic with references. In Java you cannot actually get to and manipulate the underlying value of a reference. In C you can add or subtract something to a pointer so that it points to things that are 'nearby'. In Java a pointer points to one thing only. References are strongly types. In Java you can only cast an Object to a String if the object is actually a String. These differences make C more powerful but also more dangerous. Flexibility is added to C. "},"java/enum.html":{"url":"java/enum.html","title":"Enum","keywords":"","body":"Enumerators Enums in Java are type-safe and have their own namespace. API name() The method returns the name of the enum constant, exactly as declared in its enum declaration. "},"java/Exceptions-and-errors.html":{"url":"java/Exceptions-and-errors.html","title":"Exceptions and Errors","keywords":"","body":"Exceptions and Errors Exceptions An exception is when there is something wrong with the code. Object | Throwable | Error -------- Exception Throwable Java exceptions can be categorised as those that need the throws clause and those that don't. Anything that extends the Throwable class can be thrown Errors Unlike an exception, an error occurs when there is something wrong with the JVM (for example it is out of memory), and as such is more pressing an issue. "},"java/facade.html":{"url":"java/facade.html","title":"Facade","keywords":"","body":"Facade Facade patterns hide the complexities of the system and provide an interface to the client which the client can access accross the system. Example Given a 'complex system' that consists of an interface Shape.java and its children, Square.java, Circle.java and Triangle.java. A facade could take the form of a ShapeMaker.java which creates an instance of each of these shaped in its constructor and has methods to draw each of them. A Demo.java class can then just call the shape maker, and does not not to interact with the complex system. "},"java/factories.html":{"url":"java/factories.html","title":"Factories","keywords":"","body":"Factories The factory method is one of the twenty-three Gang of Four design patterns. The problem they solve How can an object be created so that subclasses can redefine which class to instantiate? How they achieve this Define the factory method, which is a separate operation for creating an object. Create an object by calling a factory method. This enables the writing of subclasses to change the way an object is created. It helps with the interface segregation principle and dependency inversion principle of the SOLID best practices. Other benefits include: Easier to implement inversion of control. More testable as you can mock interfaces. A lot easier to change the application after shipping, as you can create new implementations without changing the dependent code. "},"java/guice.html":{"url":"java/guice.html","title":"Guice","keywords":"","body":"Guice Factories This decouples the client and implementing class Uses static methods to get and set mock implementations for interfaces \"The Factory pattern vogue stems from an almost-dogmatic belief among coders in \"C-style\" languages (C/C++, C#, Java) that use of the \"new\" keyword is bad, and should be avoided at all costs (or at least centralized). This, in turn, comes from an ultra-strict interpretation of the Single Responsibility Principle (the \"S\" of SOLID), and also of the Dependency Inversion Principle (the \"D\"). Simply stated, the SRP says that ideally a code object should have one \"reason to change\", and one only; that \"reason to change\" is the central purpose of that object, its \"responsibility\" in the codebase, and anything else that requires a change to code should not require opening up that class file. The DIP is even simpler; a code object should never be dependent upon another concrete object, but instead on an abstraction. Case in point, by using \"new\" and a public constructor, you are coupling the calling code to a specific construction method of a specific concrete class. Your code now has to know that a class MyFooObject exists, and has a constructor that takes a string and an int. If that constructor ever needs more information, all usages of the constructor have to be updated to pass in that information including the one you're writing now, and therefore they are required to have something valid to pass in, and so they must either have it or be changed to get it (adding more responsibilities to the consuming objects). In addition, if MyFooObject is ever replaced in the codebase by BetterFooObject, all usages of the old class have to change to construct the new object instead of the old one. So, instead, all consumers of MyFooObject should be directly dependent on \"IFooObject\", which defines the behavior of implementing classes including MyFooObject. Now, consumers of IFooObjects can't just construct an IFooObject (without having the knowledge that a particular concrete class is an IFooObject, which they don't need), so instead they must be given an instance of an IFooObject-implementing class or method from outside, by another object that has the responsibility of knowing how to create the correct IFooObject for the circumstance, which in our parlance is usually known as a Factory. Now, here's where theory meets reality; an object can never be closed to all types of change all the time. Case in point, IFooObject is now an additional code object in the codebase, which must change whenever the interface required by consumers or implementations of IFooObjects change. That introduces a new level of complexity involved in changing the way objects interact with each other across this abstraction. In addition, consumers will still have to change, and more deeply, if the interface itself is replaced by a new one. A good coder knows how to balance YAGNI (\"You Ain't Gonna Need It\") with SOLID, by analyzing the design and finding places that are very likely to have to change in a particular way, and refactoring them to be more tolerant of that type of change, because in that case \"you are gonna need it. (StackOverflow) Factories in Practice There are modules in which we must ... The implement(A, B) method takes two arguments, creating a contract that says that whenever ... . See below. install(new FactoryModuleBuilder() .implement(IRecordPredicate.class, DeduplicateDataRecords.class) .build(IDeduplicatedDataPredicateFactory.class)); FactoryModuleBuilder has all the relevant methods that combine the caller's arguments with injector supplied values to construct objects. Then we have a factory class that has a build() method that is called when we want a new object, and automatically does so with the correct scope. We never new up objects directly in the code, apart from in these factory classes. Scope There are three types of scope in Guice, and these should be chosen based on how long state hangs around for: @ImplementedBy is the way on implementing something that does not have state, i.e. creating a new instance every time it is asked. It can also be implemented by @Provides which provides a binding at the point of call instead of the point of compilation. @RequestScope remembers stuff across classes. @ContainerScope are life long bindings, and are used for things like servers which will want the same properties associated for their life. Scope is defaulted to instance, so this is what everything that is not explicitely labelled otherwise is. Scope and Guice: Scope is used to control the amount of instances created of certain things for a certain scope/thread -main reason : for heavy instances where it would be bad for performance to create multiple instances Scope emulated the SINGLETON PATTERN ie. factory that creates one and only one instance (if instance already exists, uses it, otherwise creates it). Singleton pattern poses a potential performance bottleneck problem with multithreading so we use scope instead: CONTAINER SCOPE is an artificial construction for bindings that extends the scope to the bredth of the application server rather than a REQUEST (Guice) scope/thread. Contains Map, Object> (key is the Interface and Object may be the implemented class). In web.xml: Properties for ContainerScopeInitializerModule com.i2group.apollo.scheduling.ContainerScopeInitializerModule_Properties containerScopeName=Disco ,containerScopeServices=SessionResource:UserResource:SubsetResource:ChartResource:SearchResource:SearchJobResource:InformationStoreResource:ItemDataResource:JobResource:VisualQueryResource:ExploreResource:TextSearchResource At startup, every resource in containerScopeServices is inserted into the containerScope under the name Disco and all those bindings can be accessed from the same app. There also exists THREAD SCOPE that is also artificially construcgted but Guice allows it. Mainly used for db stuff eg. used to take up db connections and when that scope runs out, they are freed. Circular loops To break circular guice loop, move method out into new interface or provide one the classes with @provide annotation. Annotations Assisted Prameters @assisted -> need to go to the factory which defines the constructor. Don't use guide rules but rather the parameter passed in on the interface. Comes from factory and not Guice land. Allows you to write less coupled code. Guice needs to inject something but some of the parameters are onlu available at runtime. e.g a text search string. Uses a ffav=ctory buildr oRRWEB, Nullable @nullable Other Guice binding files tend to be saved in modules called .guice.internal, which makes it easier to find them when they pressing cmmd + shift + G to search for Lisa's Notes Guice allows you to perform dependency injection. With dependency injection, objects accept dependencies in their constructors. As this requirement carries over to each object’s dependencies you need an object graph, and Guide allows you to build this graph. The @Inject annotation before the constructor signifies that Guice is being used. Bindings map types to their implementations; a module is a collection of bindings specified using method calls. Modules are the building blocks of an injector - which is Guice’s object-graph builder. Factory methods in Java deal with the problem of creating objects without having to specify the exact class of the object that will be created. “The Factory method lets a class defer instantiation it uses to subclasses”. Guide alleviates the need for factories and the use of new (think of @Inject as the new new keyword), and makes for easier unit testing. GUICE EXPLICIT BINDING (creation and then installation of a module): -for polymorphism -if an Interface has multiple implementations you specify which implementation gets injected -to specify scope ie. container scope eg. in SolrIndexSchedulerModule extends AbstractModule: final ContainerScope containerScope = ContainerScopeFactory.getScope(SERVICE_NAME); //eg. service_name might be DISCO bindScope(ContainerScoped.class, containerScope); //binds that final ConfigurationModule configurationModule = new ConfigurationModule(); install(configurationModule); install(new SolrSearchModule()); bind(ITracerFactory.class).to(TracerFactory.class); //explicit Guice binding when you want to specify container scope (even if only one implementation of that interface exists) bind(IOneOffJobExecutor.class).to(SolrIndexScheduler.class); //looks like this is due to polymorphism } -for testability GUICE IMPLICIT BINDING (implemented by / implements): -best practice, standard Guice use Guice uses BINDINGS to map types to their implementations. INJECTOR -> Guice's object-graph builder MODULE - a collection of bindings to map types to their implementations - a collection of bindings specified using Enlglish-like method calls e.g. bind(TransactionLog.class).to(DatabaseTransactionLog.class); We create an injector, then we use it to build the class that requires the injections e.g BillingService that requires TransactionLog and CreditCardProcessor INJECTION POINT - a constructor/field/method that can receive injections (anything that can have an @Inject in it) - each injection point has a collection of dependencies Dependancy injection (like factories) is a desing pattern. The dependency injection pattern leads to code that's modular and testable. Core principle: to SEPERATE BEHAVIOUR from DEPENDENCY RESOLUTION ie. a class is not responsable for looking up its dependencies; instead, they're passed in as constructor parameters Without Guice:this would have to be done recursively for every class ie the dependencies of the dependencies would have the desingn pattern applied to it etc. with GUICE we can avoid this: Guice how to: 1) Tell Guice how to map the injected interfaces to their implementations (this configuration is done in a Guice module "},"java/junit.html":{"url":"java/junit.html","title":"JUnit","keywords":"","body":"JUnit Setting up a test There are several annotations that facilitate the initialisation of a test, allowing set up of variables and the environment before any of the tests in the class are run. These are: @Before This code is executed before each test. @BeforeClass This code is executed once, before the entire test fixture. This is done with computationally expensive methods or when they share resources. A good example is the establishing a database connection that all the tests use. Code marked @BeforeClass is run as static initialiser, and so it will run before the class instance of the test fixture is created. Note that the static keyword therefore has to be added before the @BeforeClass method. @BeforeEach and @BeforeAll are the equivalents of @Before and @BeforeClass in JUnit4. Similarly there is a @After and an @AfterClass (throws exception) which are used to execute code after the tests have finished. Different assertions verifyNoMoreInteractions() Checking for an exception Use the @Rule annotation to initialise an ExpectedException. @Rule public ExpectedException mExceptionGrabber = ExpectedException.none(); Then state when in the test an exception is expected and then after that fail the test, so that it fails if the test does not fail when stated. mExceptionGrabber.expect(NullPointerException.class); mChartDAO.getChartRecordFromId(RECORD_ID_1); // Shouldn't get here fail(); "},"java/other.html":{"url":"java/other.html","title":"Other","keywords":"","body":"Other JDK To find out which java you are using: which java To find out where the jdk is saved on a mac, enter the following command: /usr/libexec/java_home To set JAVA_HOME follow the instruction at http://www.sajeconsultants.com/how-to-set-java_home-on-mac-os-x/. final keyword Effectively final variables From Java 8, variables that are never changed having been initialised are called effectively final. Local classes can access the final or effectively final variables of the encompassing class. Final classes When a class is defined as final in Java, it merely means that it cannot be extended. One may want to enforce this due to the unpredictable behaviour of classes that implement inheritance. Due to this classes should either be designed to be extended (and have all the relevant documentation) or be declared final. Final Methods When a method is declared as final in Java it means that can't be overridden (for object scope) or hidden (for static). This allows a developer to create functionality that cannot be changed by subclasses, hence guaranteeing the functionality. By not allowing customisation you can Operators Arithmatic Operators If an arithmatic operator is applied to two different types, the smaller type is promoted to the larger type. Java binary arithmatic operators cause types smaller than an int to be promoted to an int (except for unary operations). Pre-increment and post-increment operators differ in that they return the new-value or the old-value of the operation. Note that this can mean that they can return different results if used in specific ways. Flow continue Keyword The continue keyword escapes the current iteration - i.e. to the boolean logic. if and switch statements do not react to continue. Break Keyword This is different from break, which transfers control to the enclosing statement. if statements do not react to break. Optional Labels These allow higher scoped loops to escaped. Reflection Reflection is code that is able to inspect other code in the same system. A common usage of this in statically typed languages is calling a method on an object if that method exists: Method method = foo.getClass().getMethod(\"doSomething\", null); method.invoke(foo, null); XML JAXB is used for binding XML schemas and JAVA representations, allowing XML to be used in JAVA applications. Marshalling Map the schema of the XML file Unmarshall the XML Modify the XML object in memory Marshall the modified object wherever ​ Error Handling Executors log4j is a Java based logging utility. It has multiple layers of logs - trace, debug, info, warning, error and fatal. Types Floating point literals are assumed to be of type double unless they are post-fixed with f. To create a list use the following: final List columnValues = Lists.newArrayList() Literals A Literal is the source code representation of a fixed value; literals are represented directly in your code without requiring computation. For example a boolean is a data type, whilst true is a literal. APIs java.long.Iterable holds most of the Java Collections framework. For the OCA exam we only need to know List and ArrayList. Array. Arrays are declared with the following syntax: String[] names = String[3] (this creates an empty array of size 3), whilst String[] names = {1, 2, 3} is used to instantiate. ​ To Look Up Further Literals Difference between enum values and enum constants. Interfaces You don't need to add the public keyword to methods defines in the interface as they are public by default. Lambdas Lambda is a Java specific term. The more generic name for them are closures. A limitation of things that you pass into lambda's is that they have to be final or effectively final. TODO Spring Spring is built to implement a dependency injection approach. It is just another alternative to Guice. Annotations Autowiring Autowiring allows you to skip configurations wlsewhere of what to inject and just does it for you. D Abstract keyword Abstract Classes Abstract classes cannot be instantiated, but rather define methods for subclasses that can be instantiated. Private constructors Uninstantiable classes Private constructors can be used to create uninstantiable classes that are just a collection of related static functions. Readability When a class has several different constructors then a private constructor can be used to make it easier to understand the different ways of constructing the class. Delegating constructors Delegating constructors use private constructors to take a lot of options (which are implementation details) and then uses other constructors to delegate to it. Private constructors can also be used when the constructor should only be used in a certain constructor. Another method can call the constructor, but this adds a level of Utility classes A utility class is one that only has static methods. You should make the class final. You should not make it public. It should have a private constructor, so that it cannot be extended. Concurrency The Java platform is designed from the ground up to support concurrent programming. In concurrent programming there are two basic units of execution: processes and threads. https://docs.oracle.com/javase/tutorial/essential/concurrency/procthread.html TODO: Finish reading this article Varargs The varargs parameter ()e.g. int... variableName) gives the ability to treat the parameter as if it was an array. Meaning that you can just pass the method a comma separated list of parameters and they will be taken as an array by the method. It must be the last element in the method's parameter list, i.e. you can only have one per method. Mockito Mockito is a tool used to create and manage mock objects, that can be used in conjuncture with JUnit. Initialised MockitoAnnotations.initMocks(this) Used in the setUp() method to initialise objects with Mockito annotations. Assertions verifyNoMoreInteractions() This checks that the mocks given to the method do not have any unverified interaction. It is used after you have verified your mocks to make sure that nothing else hwas invoked on your mocks. Terminology A member is just a variable or a method. Static Initialisation The static keyword, when used on its own with a set of curly parentheses is used for statin initialisation. This runs the code in the braces when the class is first used. The statements in it run and assign any static variables as needed. These should never be used - just use constructors instead. Static Imports e.g. import static java.util.Arrays.asList; They are used for importing static members of classes. This just saves one having to specify the whole path whenever it is used in a class. JavaBean A JavaBean is a class that is: Serialisable No-parameter constructor Uses getters and setters. Note that there are strict naming conventions for getters and setters, namely they must start with get, set or is. Comparable public interface Comparable This interface imposes a total ordering on all the objects that implement it, referred to their natural ordering. It facilitates the use of the Collections.sort() method. Generics Generics add stability to your code bt making more of your bugs detectable at compile time. Generics enable types to be parameters whem defining classes, interfaces and methods. The benefits of generics are as follows: Elimination of casts. Stronger type checks at compile time. Enable generic algorithms that can work with different types. Indirection Indirection is the ability to reference something using a name instead of the value instead. General Java topics Default Keyword This is a means of making stream strict interfaces so that methods that could be dangerous, such as locking or tidying up, are hidden. Default as an access modifier Note that there is a default access modifier. This is called by omitting an access modifier, not by using the default keyword. It means that the method it is implemented on can only be called from classes in the same package. Adding methods to interfaces Default methods enable you to add new functionality to the interfaces of your libraries and ensure binary compatibility with code written for older versions of those interfaces. This is because with the default keyword you add a default implementation for the method so that all classes that inherit from it have an implementation. Virtual Methods All methods in Java are virtual by default. This means that they can be overridden when used in inheritance, unless that methods is declared final or static. Generally, a virtual method is one that is inheritable and overridable. It is an important part of polymorphism. A virtual function defines a target function to be executed, but the target might not be known at compile time. Virtual functions are resolved 'late'. If the function in question is 'virtual' in the base class, the most-derived class's implementation of the function is called according to the actual type of the object referred to, regardless of the declared type of the pointer or reference. If it is not 'virtual', the method is resolved 'early' and the function called is selected according to the declared type of the pointer or reference. A pure virtual function is one that is required to be implemented by a derived class. Classes containing pure virtual functions are termed abstract and cannot be instantiated directly. Optional Specifiers Optional specifiers go after the access modifier in a method declaration. synchronised This keyword is related to different threads reading and writing to the same variables, objects and resources. It enables a strategy for preventing thread interference and memory consistency errors. If an object is visible to more than one thread then all reads and writes to that object's variables are done through synchronised methods, i.e. that these different threads have access to the resource in an atomic way. native Used when interacting with code written in other languages such as C++. Strictfp TODO: Anonymous inner classes TOREAD: * In a distributed computing environment, distributed object communication realizes communication between distributed objects. The main role is to allow objects to access data and invoke methods on remote objects (objects residing in non-local memory space). Invoking a method on a remote object is known as remote method invocation (RMI) or remote invocation, and is the object-oriented programming analog of a remote procedure call (RPC). Environment Variables In Java System.getEnv() is used to retrieve environment variables. Anonymous subclass instantiation You can instantiate an anonymous abstract sublass with the following code: abstract class My { public void myMethod() { System.out.print(\"Abstract\"); } } class Poly extends My { public static void main(String a[]) { My m = new My() {}; m.myMethod(); } } DAO Design Pattern The data access object (DAO) allows the isolation of the application layer from the persistence layer. This hides all the complexities of performing CRUD operations from the application layer. An example is having an application that works with users, with name and email properties. Volatile The volatile keyword is used to indicate that a variable's value will be modified by different threads. as a result the value of the variable will never be cached thread-locally, but rather go straight to main memory. Also, access to the variable acts as though it is enclosed in a synchronised block. Garbage Collections There are two types of garbage collection: Stop the World Within stop the world there are two states: Concurrent This incrementally asks if things are still being used. it takes longer epr event but doesn't stop the world. Futures Interface: Future Futures are the backbone of asynchronous computing. A Future represents the result of an asynchronous computation. Methods are provided to check if the computation is complete, to wait for its completion, and to retrieve the result of the comutation. The result can only be retrieved when the computation is completed, blocking it until it is ready. Once a computation is completed, the computation can not be cancelled. Loggers and tracers Tracers All tracers have to have a class to achieve a fine level of filtering. Then change the log4j properties to decide the different locations that the messages get sent to (i.e. general logs or console logs). A tracer is essentially just context and info on where to log. Class loaders - used to find the jars referenced in the main method. Liberty is weird: as an application server it means there can be multiple wars. The class loader that loads the class is the thing that isolates and allows for process separation within a process. Temporary Files Java The following code is used for creating a temporary files that is saved in C:\\Users\\Ed\\AppData\\Local\\Temp properties.put('ImportBatchSize', '100') final File tmpPropertiesFile = File.createTempFile('importConfigFile', '.txt') properties.store(new FileWriter(tmpPropertiesFile), \"Temporary properties file containing staging schema details\") Gradle To print the location of the temporary file in groovy then use the following snippet: println '>>> The location of the temporary file is:' println project.getProperty('importConfigFile') "},"java/servlets.html":{"url":"java/servlets.html","title":"Servlets","keywords":"","body":"Java Servlets A Java servlet is a Java program that extends the capabilities of a server. They most commonly implement applications hosted on Web servers. Such Web servlets are the Java counterpart to other dynamic Web content technologies such as PHP and ASP.NET. A Java servlet processes or stores a Java class in Java EE that conforms to the Java Servlet API. Servlets act as a middle layer between requests coming from a web browser and databases or applications on the HTTP server. They allow you to collect input from users (such as from forms) and create web pages dynamically. They often serve the same purpose as programs implemented using the CGI but are platform independent and have better performance. Servlet Tasks Servlets perform the following tasks: Read the data from clients. Read the HTTP request data. Process this data and generate results. Send the data back to the client. JavaServer Pages Servlets can be generated automatically from JavaServer Pages (JSP). JSPs helps create dynamically generated web pages based on html. It allows Java code and certain pre-defined actions to be embedded into static content. It does this by adding XML-like tags, called JSP actions, to be used to invoke built-in functionality. JSPs are compiled into Java Servlets by a JSP compiler. To deploy and run JSP, a compatible web server with a servlet container, such as Tomcat or Jetty. Deploying Servlets To deploy and run a servlet a web container must be used. A web container is essentially the component of a web server that interacts with the servlets. Servlet Packages Java servlets are Java classes that are run by a web server that has an interpreter that supports the Java Servlet specification. Servlets can be create using the java.serlet and javax.servlet.http packages. "},"java/streams.html":{"url":"java/streams.html","title":"Streams","keywords":"","body":"Streams Streams differ from collections in a number of ways: No storage Functional (i.e. produces a result but does not modify the source) Stream operations are combined to form stream pipelines. A pipeline consists of a source (e.g. a Collection) and then intermediate operations. API map() Stream map(Function mapper) Returns a stream consisting of the results of applying the given function to the elements of this stream. This is an intermediate operation. This is an example of a stateful lambda (i.e. one whose result depends on any state which might change during the execution of the stream pipeline). flatMap() This returns a stream which is itself the result of replacing each element of the stream with the contents of a mapped stream produced by applying the provided mapping function to each element. So whilst map produces only one output value for each input value, the flatmap operation produces an arbitrary number of values for each input value. The reason why it is called flat is that the 'clumps' of values returned by each call to the mapper function are not distinguished at all in the output stream. If you have the requirement of turning a stream of streams into a 1 layer stream, i.e. Stream> -> Stream then you need to use the identity function as flatMap must be provided with a method. So: Stream flatStream = nestedStream.flatMap(Function.identity()) collect() R collect(Collector collector) Performs a mutable reduction operation on the elements of this stream using a Collector. Mutable reduction accumulates input elements into a mutable result container, such as a Collection or StringBuilder, as it processes the elements in the stream. filter() Stream filter(Predicate predicate) Returns a stream consisting of the elements of the given stream that match the provided predicate. peek() Stream peek(Consumer action) Returns a stream consisting of the elements of this stream, additionally performing the provided action on each element as elements are consumed from the resulting stream. Peek is mainly for debugging purposes and as such the method used on the elements of the stream should not modify them. It is mainly for observing the elements, e.g. checking the size of each element or logging each element. skip(long n) Returns a stream consisting of the remaining elements of this stream after discarding the first n elements of the stream. limit(long maxSize) ` Returns a stream consisting of the elements of this stream, truncated to be no longer than maxSize in length. Generator Functions Consumers Interface Consumer A consumer represents an operation that accepts a single input argument and returns no result. It is a funtional interface whose functional method is accept(Object) "},"java/useful-classes.html":{"url":"java/useful-classes.html","title":"Useful API","keywords":"","body":"I/O Streams There are three ways to write to a file - byte streams, character streams and buffered streams. Byte streams: All byte stream classes are descended from InputStream and OutputStream. Character Streams: Similar to the above but work on characters and not bytes. Buffered Streams: The above two streams are examples of unbuffered I/O. This means that each read or write is handled directly by the underlying OS. To reduce the overhead caused by this inefficient process the Java platform implemets buffered I/O streams. These read data depm a memory area known as the buffer and the native input API is called only when the buffer is empty Data streams: Object streams: FileWriter Class used for writing character files. It assumes that the default character encosing and byte-buffer size are acceptable, though to specify these yourself one needs to construct an OutputStreamWriter on a FileOutputStream. BufferedWriter Writes test to a character-output stream, buffering so as to provide for the efficient writing of single characters, arrays and strings. UUID UUID.randomUUID().toString() This gives a random UUID. Matcher An engine that performs match operations on a character sequence by interpreting a Pattern. "},"java/OCA/chapter1.html":{"url":"java/OCA/chapter1.html","title":"Chapter 1","keywords":"","body":"OCA Book Chapter 1 Instance initialisers Whilst their use is rare, they are useful for: initializer code must handle exceptions perform calculations that can't be expressed with an instance variable initializer. Another case in which instance initializers are useful is anonymous inner classes, which can't declare any constructors at all. This is because with an instance initializer, you can just write the code once, and it will be executed no matter what constructor is used to create the object. Garbage Collection System.gc() is not guaranteed to run. An object will remain on the heap until it is no longer reachable, which occurs at two times: The object no longer has any references pointing at it. All references have gone out of scope. It is objects (on the heap) and not their references that get garbage collected. finalize() The finalize() method gets called if the garbage collector tries to collect the object. If the garbage collector does not get run then method does get run. If the garbage collector fails to collect the object and tries to run it again later, the method does get called a second time. "},"java/OCA/chapter2.html":{"url":"java/OCA/chapter2.html","title":"Chapter 2","keywords":"","body":"Chapter 2 Sorting Sorting an array is achieved by Arrays.sort(). It returns void. Searching Searching an array is achieved by Arrays.binarySearch() and requires the array to be sorted. It has a return type of int which is primarily the search key if is contained in the array. Otherwise it is the insertion point, which is defined as the point at which the key would be inserted into the array: the index of the first element greater than they key, or a.length if all the elements in the array are less than the specified key. public static int binarySearch(long[] a, long key) "},"java/OCA/chapter3.html":{"url":"java/OCA/chapter3.html","title":"Chapter 3","keywords":"","body":"OCA Exam Notes Chapter 3 Autoboxing Jave will convert a primitive int to an object Integer to add it to an ArrayList through the wonders of autoboxing. Note that in method overloading, when the primitive int version isn't present, it will autobox. However, when the primitive int version is provided, there is no reason for Java to do the extra work of autoboxing. Note that Java can only accept wider types. An int can be passed to a method taking a long parameter. Java will not automatically convert to a narrower type. This means that if you want to pass a long to a method taking an int parameter, you have to add a cast to explicitly say narrowing is okay. Java Notes Methods Predicate functions These are used to only carry out a block of code on a items that fulfill certain criteria. They return a boolean based on whether the argument to the predicate function matches the predicate. For example: for (Class item : items) { if (!filter.test(item)) { continue; } } Operators Arithmatic Operators If an arithmatic operator is applied to two different types, the smaller type is promoted to the larger type. Java binary arithmatic operators cause types smaller than an int to be promoted to an int (except for unary operations). Pre-increment and post-increment operators differ in that they return the new-value or the old-value of the operation. Note that this can mean that they can return different results if used in specific ways. Flow Continue Keyword The continue keyword escapes the current iteration - i.e. to the boolean logic. if and switch statements do not react to continue. Break Keyword This is different from break, which transfers control to the enclosing statement. if statements do not react to break. Optional Labels These allow higher scoped loops to escaped. Reflection Reflection is code that is able to inspect other code in the same system. A common usage of this in statically typed languages is calling a method on an object if that method exists: Method method = foo.getClass().getMethod(\"doSomething\", null); method.invoke(foo, null); "},"java/OCA/chapter4.html":{"url":"java/OCA/chapter4.html","title":"Chapter 4","keywords":"","body":"OCA Exam Notes Chapter 4 Final variables When a variable is declared final it must be initialised or will lead to a compile error. Protected access modifier Protected access allows everything that default (package private) access allows and more. Constructors Default Constructor Every class in Java has a constructor whether you code one or not. If you don't include any constructors in the class, Java will create one for you without any parameters. This Java-created constructor is called the default constructor. It is only in the compiled file with the.class extension that it makes an appearance. this() Constructors can be called only by writing new before the name of the constructor. To call another constructor of the same class use this. When this is used as if it were a method, Java calls another constructor on the same instance of the class. If you choose to call it, the this() call must be the first non-commented statement in the constructor. Passing by reference and by value Java is always pass-by-value. Unfortunately, they decided to call the location of an object a \"reference\". Every variable in java is a reference, meaning that if you assign s2 = s1 then when you change s1 then s2 will also change. However, this is not true of primitives, which will change. This is because primitives are not references, but rather their bitwise value. They are both assign by value, it's just that the value of the reference and not the value of the object. When a parameter is passed by reference, the caller and the callee use the same variable for the parameter. If the callee modifies the parameter varuable, the effect is visible to the caller's variable. Pass by value means that the caller and callee have two independent variables with the same value. If the callee modifies the parameter variable, the effect is not visible to the caller. How Java makes this confusing is that it emulates call-by-reference in a call-by-value environment by allowing modifications to the original object be visible to the caller, but the modifications are only to the object and not to the variable. The example given to show this is found (here)[https://stackoverflow.com/questions/40480/is-java-pass-by-reference-or-pass-by-value#40523]. Order of initialisation Initialise the superclass Static variable declarations and static initialisers in the order they appear in the file Instance variable declarations and instance initialisers in the order they appear in the file The constructor Encapsulation Encapsulation means something specific in Java. Encapsulation means we set up the class so only methods in the class with the variables can refer to the instance variables. Callers are required to use these methods. Let's take a look at our newly encapsulated Swan class: Static You cannot access a non-static variable in a static way. But you can access a static variable with a instance method. Static Initialisation Blocks A final variable that has not been initialised yet can be initialised in a static block. Static initialisers make your code hard to read, but there is one case in which they are common - when you need to initalise a static field with multiple lines. Autoboxing "},"java/OCA/chapter5.html":{"url":"java/OCA/chapter5.html","title":"Chapter 5","keywords":"","body":"OCA Book Chapter 5 Inheritance By design, Java doesn't support multiple inheritance in the language because studies have shown that multiple inheritance can lead to complex, often difficult-to-maintain code. Java does allow one exception to the single inheritance rule: classes may implement multiple interfaces, as you'll see later in this chapter. The first line of every constructor in Java is either this() or super(), even if these lines are only added by the compiler at compile time. Contructors In Java, the parent constructors are always called before the children constructors. Inherited Class Members The this keyword can also be used to call a parent's class members. The super keyword can also be used to explicitly refer to a parent's class member. Overriding Parent methods Overriding parent methods has its limitations: The child method must have the same signature. The child method must be at least as accessible as the parent. The child method may not throw a checked exception that is new or broader than the class of any exception that is thrown by the parent method. The return class of the child method must be the same or a subclass of the return type of the parent method. This is known as covariant return types. Note that overloading is using the same method name with a different signature, whilst the above is overloading. For non-private methods, both methods must use static or neither. Hidden Method A hidden method occurs when a child class defines a static method with the same name and signature as a static method defined in a parent class. The same four rules defined above for overriding methods still apply, along with the following additional rule: The method defined in the child class as static must be marked as static if it is marked as static in the parent class. Likewise, the method must not be marked as static in the child unless it is marked as static in the parent. However, unlike overridden methods, at runtime the parent version of a hidden method is always executed if the call to the method is defined in the parent class. Abstract methods and classes An abstract class does not need to implement any methods in its parents. Interfaces public, final and static are assumed when defining a variable in an interfaces static methods in interfaces have to have Inheriting variables Java does not allow variables to be overridden, only hidden. However, it is considered extremely bad practice to do so. Abstract classes A class defined as abstract can never be initialised. A method defined as abstract does not (and can not) provide an implementation. An abstract method may only be declared in an abstract class. * All variables in iinterfaces are assumed to be public static final, abstracr classes may contain them as well, Interfaces do not inherit from Java.Object as then Java would be inheriting from multiple classes. double is to float what short is to int. Overriding -> when you have the same method signature Overloading -> when you have a different method signature "},"java/OCA/chapter6.html":{"url":"java/OCA/chapter6.html","title":"Chapter 6","keywords":"","body":"Chapter 6 - Exceptions Runtime exceptions are also known as unchecked exceptions. A checked exception includes Exception and all subclasses that do not extend RuntimeException. Checked exceptions tend to be more anticipated—for example, trying to read a file that doesn't exist. Java has a rule called the handle or declare rule. For checked exceptions, Java requires the code to either handle them or declare them in the method signature. "},"java/OCA/apis.html":{"url":"java/OCA/apis.html","title":"APIs","keywords":"","body":"Java APIs Core APIs Arrays Have a .length property If a value does not exist in an array then the binarySearch() method will return the index where the searched for value would reside, minuses one, and returns this value negated. ArrayList Have a size() method. Have a static .equals() method, unlike the Array class. Calling it on an Array will just use the == compare mechanism. Primitives and equivalent objects Integer parseInt() returns an int. valueOf return an Integer. Long nextlong() Returns the next pseudorandom, uniformly distributed long value from this random number generator's sequence. To create a long you add an L after the number, whilst to create a Long you need to new up a Long object with the new keyword. Strings String Java will convert ints to Strings in some cases, so some cases that one would expect to not compile actually get compiled. See the following examples: int num1 = \" \" + 7; // Compiles int num2 = 7 + \" \"; // Compiles int num3 = \" \" + 7 + 7; // Does not compile StringBuffer Have a capacity() method. Have a length() method. The substring() method returns a string, not a StringBuffer, and does not modify the underlying StringBuffer, which is different to all the other methods on the class. DateTimes For a list of the all the valid Java timezones click (here)[http://joda-time.sourceforge.net/timezones.html]. Optional of() : This is how you assign values to an Optional. isPresent() : Returns a boolean based on whether the Optional has a value or not. Infrequently used APIs Class.forName() A call to Class.forName(\"X\") causes the class named X to be dynamically loaded (at runtime). A call to forName(\"X\") causes the class named X to be initialized (i.e., JVM executes all its static block after class loading). Class.forName(\"X\") returns the Class object associated with the \"X\" class. The returned Class object is not an instance of the \"x\" class itself. Class.forName(\"X\") loads the class if it not already loaded. The JVM keeps track of all the classes that have been previously loaded. This method uses the classloader of the class that invokes it. The \"X\" is the fully qualified name of the desired class. "},"java/OCA/questions.html":{"url":"java/OCA/questions.html","title":"Questions","keywords":"","body":"Notes from Example Questions NegativeArraySizeException - Thrown if an application tries to create an array with negative size. When using the command line command javac you must also place the extension.java at the end of the class you want compiled. Composition is the has-a relationship, which is created by using member variables. You cannot use primitive types for collection types. An instance variable is a variable declared inside a class but outside a method and are associated with an instance of a class. A class variable is another term for a static variable. An entry point in Java consists of a main() method with a single String[] argument, a return type of void, and modifiers public and static. Note that the modifier final is optional. The only package that is always imported in every Java class is java.lang. Static methods do not have access to any class instance variables. Overloading and overriding occur when the method names are the same but overriding occurs when the parameter lists are the same, whilst overloading occurs when the parameter list is different. You are allowed underscores in numeric literals (though not at the beginning or the end). double > float Java automatically widens a type. Objects get initialised to null, whilst primitives get initialised to 0 (along with Strings being null i.e. empty string). Automatic variable initialisation occurs for instance variables but not method variables. A decimal will automatically be a double; to make it a float it needs to be cast with an f. All the primitive type names are reserved words and therefore cannot be used as variable names. Strings can be set to null. You cannot access a non-static variable in a static way. But you can access a static variable with a instance method. parseInt() returns an Integer whilst valueOf return an int. A newly constructed Double object can be cast as either a Double or a double due to autoboxing. Underscores are allowed between any two digits in a literal but not at the beginning, end or eitherside of a decimal point. Java, unlike other languages, does not convert from integers to booleans in if clauses, meaning that a compilation error will occur. The switch statement only supports the primitive types: byte, short, char, 'int and the classes: String, Character, Byte, Short, Integer, as well as enums. boolean operators such as && can only be called on boolean expressions Java evaluates from left to right so if there is both a mathematical expression and a string in the same expression, then if the mathematical expression happens to the left of the string it will calculate that mathematically before automatically turning the expression into a string. Ternary conditions require both sides to be of compatible types, so if you had true evaluating to a string but false evaluating to an int, this would result in a compile error. (if being assigned) The & is called a conjunctive operator, whilst && is called the conditional conjunctive operator. ArrayList -> .size() whilst Array -> .length Arrays.binarySearch(array, searchTerm) sort() and binarySearch() are the methods that can be called on arrays. binarySearch() requires for the array to be sorted. When declaring an array, if you are not providing the values that go in it, you must declare the size. StringBuilders insert puts the value of the second argument into the index of the first argument, i.e. the index of the final array of the number is created. Stringbuilders delete with 2 arguments: the first is inclusive and the second not, i.e. the character at the first index will no longer exist but the one at the second will. If the second argument is out of bunds, it just deletes to the end and no error is thrown. The break keyword can take an argument of the loop to break. Java uses pass-by-value to copy primitives and references of objects into a method. The only variables always available to all instances of the class are those declared static. This is because public variables are not available to another instance if that instance does not have a reference to the object. When a method is declared as final in Java it means that can't be overridden (for object scope) or hidden (for static). This allows a developer to create functionality that cannot be changed by subclasses, hence guaranteeing the functionality. Java only inserts a no-argument constructor if there are no other constructors (with any amount of arguments) in the class. Variables passed into a method are passed by value, however, when an array is passed a reference to the object is passed and so can be modified. return can still be called in a method that returns void, just not with any object or literal. Method names can include $ signs, underscores but not hyphens or reserved words such as new. Overriding: 1. The child method must have the same signature, 2. The child method must be at least as accessible as the parent, 3. The child method may not throw a checked exception that is new or broader than the class of any exception that is thrown by the parent method, 4. The return class of the child method must be the same or a subclass of the return type of the parent method - This is known as covariant return types. A hidden method occurs when a child class defines a static method with the same name and signature as a static method defined in a parent class. The same four rules defined above for overriding methods still apply, along with the following additional rule: 1. The method defined in the child class as static must be marked as static if it is marked as static in the parent class. Likewise, the method must not be marked as static in the child unless it is marked as static in the parent. public, final and static are assumed when defining a variable in an interfaces. When defining methods in interfaces, they are implicitly public. They cannot be made final, whether they are static or default or abstract. A child class will automatically put in a super() call in its constructor. However, if the parent does not have a no-argument constructor then the automatic no-arg constructor will cause an error. abstract interface methods: they are implicitly public (but can also be explicitly public). A class cannot have two methods with the same signature. Declaring a method in a parent class as final does not mean that you cannot create a new method with the same signature in a child, it just means that you cannot change the implementation of the final method. Inheritance can be implemented with both extending and implementing. The package-private modifier (i.e.default) is narrower than protected Interfaces can extend (i.e. be the child of) other interfaces, however, they cannot implement another interface. An abstract class can extend a concrete class. You cannot instantiate an abstract class. An abstract method may only be declared in an abstract class, otherwise the code will not compile. An abstract method may not be given an implementation. A method may not be defined as both abstract and private. The key distinction between reference types and object types is that assigning a reference type has no impact on the underlying object. A try block must include either a catch or finally block, or both. Java has a rule called the handle or declare rule. For checked exceptions, Java requires the code to either handle them or declare them in the method signature. A checked exception includes Exception and all subclasses that do not extend RuntimeException. The order of catches is important. Subclasses must be caught before their superclasses. The code in the finally block will be called regardless of whether the catch statement being called. A finally statement requires brackets. Exception, RuntimeException and Throwable are all part of the java.lang package. An subclass can swallow a checked exception for a method declared in the parent class. If a method declares that it will throw a checked exception but throws an unchecked exception, then you still need to catch it. IllegalArgumentException is when the wrong type is sent to a method, whilst NoClassDefFoundException is when code available at compile time is not available at runtime, whilst ClassNotFoundException is when the class was not found on the classpath. If an exception is thrown by both the catch block and the finally block then the one from the finally block is propagated to the caller, and the catch exception dropped. With lambdas, the body does not require a return statement or a semicolon if you haven't used braces. Predicate is in the java.util.function package and is an interface with one method. A lambda can have zero parameters but a Predicate cannot. A Predicate is defined as a type mapping to a boolean. ArrayList declares a removeIf() method that takes a predicate. By providing a lambda, this can take the place of the single method of an predicate interface. Starting in Java 8, months are not counted from base 0 Methods that are on both String and Stringbuilder: charAt(), indexOf(), length(), and substring(). Methods that are on Stringbuilder: append(string), insert(offset, string), delete(int, int), deleteCharAt(int), reverse(), toString() The date/time objects added in Java 8, such as LocalDateTime, are also immutable. Note that Strings and Arrays are Objects in Java When passing an array to a method the reference cannot be modified to impact the reference in the calling method but the data in the array can be. The following are valid ways of declaring arrays: String[] array = new String[] {\"one\", \"two\"}; An object can be assigned to a superclass reference or interface without an explicit cast, but cannpot be assigned to a subclass reference without an explicit cast. Java does BIDMAS Regardless of the type of the reference you have for an object in memory, the object itself does not change. The reference is created by the left hand side of the declaration, whilst the object is created by the code following the new (the right hand side). What has changed is our ability to access methods within the object with the different reference. You only have access to the methods of the type that has been cast. Technically, polymorphism is the ability of a Java object to be accessed using a reference with the same type as the object, a reference that is a superclass of the object, or a reference that defines an interface that the object implements (either directly or through a superclass). A virtual method is a method in which the specific implementation is not determined until runtime (which is all non-final, non-static, non-private methods). An overridden method must be at least as accessible as the method it is overriding. A try statement can have 0 or more catch's and 0 or more finally's, but must have at least one of them. LocalDate uses a static method to new it up rather than a constructor. Chained period statements do copile (and return the result of the last one) but is incorrect. Some classes are LocalDate, Period, DateTimeFormatter. ArithmeticException and IllegalArgumentException The value of a case statement must either be a literal or a final variable. if a = 5 then a++ will return 5 whilst ++a would return 6 Repeated Objects get initialised to 0, whilst primitives get initialised to null (along with Strings). TODO Revise abstract classes Revise StringBuilders Look at the syntax of declaring arrays Go through areas I got wrong in the last exam pre and post increment "},"java/OCP/chapter1.html":{"url":"java/OCP/chapter1.html","title":"Chapter 1","keywords":"","body":"Chapter 1: Advanced Class Design Overloading and overriding occur when the method names are the same but overriding occurs when the parameter lists are the same, whilst overloading occurs when the parameter list is different. Virtual method invocation is when Java looks at the actual type of an object at runtime to decide what method gets called. In practice this means that the subclass methods will be returned when asking for the methods of a class. This property allows for the instanceof keyword to work. The @Override annotation is used to explicitly mark a method as overridden, so that you notice if instead you are accidentally merely overloading the method. The hashcode() method must: Have the same result within the same program. If equals() returns true for two objects, then hashcode() must return the same result when called on either. However, if equals() returns false, calling hashcode() does not necessarily have to return false. Not use more variables than equals(). It is common to multiply by a prime number when combining multiple fields in the hash code. This makes the hash code more unique, which helps when distributing objects into buckets. Type safety means that a program cannot perform an operation on an object unless that operation is valid for that object. It is the most essential element of Java's security. Java enforces type safety as follows: every Java object is stored in some region of the computer's memory and labels every object by putting a class tag next to the object. Dynamic type checking is when you check the class tag of an object upon every operation that calls the object, however, this is extremely inefficient. Instead, Java uses static Type checking, which looks at the program before it is run and carefully tries to determine which way the tag checking operations will come out, and does not run checking operations more than once where possible. Enums Enums enforce type checking, i.e. unlike numeric constants, you cannot get a runtime exception due to an invalid value. enums provide a values() method that returns an array of all the values. enums can define an abstract method - meaning that all the values must provide an implementation of that method. If a method is not abstract then any amount of the enum values can override it. Inner Classes A nested class that is not declared static is called an inner class. There are four types of nested class: A member inner class is a class defined at the same level as instance variables and is not static. These cannot declare static fields or methods. They can access members of the outer class, including private members. A local inner class is declared within a method. These do not exist until the method is invoked, and goes out of scope when the method returns. They do not have an access identifier. They have access to all the variables and methods of the enclosing class but not the enclosing method (unless they are final). An anonymous inner class is a special case of local inner class that has no name (in other regards it is the same as a local inner class). They are useful when you have a short implementation that will not be used elsewhere. They must extend an existing class or interface. A static nested class is a static class that is defined at the same level as static variables. They can be instantiated without an instance of the enclosing class therefor cannot access the instance variables of the enclosing class. The enclosing class can refer to the fields and methods on the static nested class. Interestingly you can import them in both the regular and a static way. Inner classes can be useful as they can encapsulate helper classes by restricting them to the containing class and by making the code easier to read. An inner interface can be private, meaning that the interface can only be referred to from within the current outer class. From Java 8 the concept of effectively final has been created which is defined as follows: if the code would still compile with the keyword final inserted before the local variable, the variable is effectively final. "},"java/OCP/chapter2.html":{"url":"java/OCP/chapter2.html","title":"Chapter 2","keywords":"","body":"Chapter 2 - Design Patterns and Principles Interface Interface method definitions can be duplicated in a child interface without issue. Functional Programming Functional Interface A functional interface is an interface with only one abstract method and are used for the basis for lambda expressions. The presence of other default or static methods does not effect this definition. Whilst Java will assume that any interface with only one abstract method is a functional interface, the @FunctionalInterface annotation can be used to make this explicit. Note that an interface with no methods but that extends one that has one or an interface that overrides another interface that has only method are both functional interface as they both effectively have only method. Java relies on context when figuring out what lambda expressions mean. If you provide a lambda as an argument of a method then Java will treat the parameter as a functional interface and map the lambda to the single abstract method. martin fowler "},"gradle/create-project.html":{"url":"gradle/create-project.html","title":"Creating a project","keywords":"","body":"How to create a new gradle project First we create a gradle project: $ gradle init --type java-library Then we format it to a Liberty server: Create a web.xml: touch src/webap/WEB-INF/web.xml Create a server.xml: touch src/main/liberty/config.server.xml Fill the build.gradle, this cis comprised of the following sections: apply the plugins required version details, e.g. version: '1.0-SNAPSHOT' buildscript to state the plugins required repositories - where to find the dependencies dependencies - the java code required for compilation ext - variables war test Connect to IBM Cloud Create a manifest.yml file in the project's root directory. A basic example is as follows: applications: 3 - name: GetStartedJava 4 random-route: true 5 path: target/GetStartedJava.war 6 memory: 256M 7 instances: 1 log in bx target --cf bx cf push from within the root directory TODO: Set up pipeline of testing Set up local minikube Set up IBM cloud so online Add redis to cache db stuff Docker images kubernetes helm refactor out front end into microservice "},"gradle/groovy.html":{"url":"gradle/groovy.html","title":"Groovy","keywords":"","body":"Groovy NB. To test groovy you can go to groovy/bin/groovyConsole for a groovy editor. POGOs There are several interesting attributes of plain old groovy objects: Methods and classes are public by default and properties are private. Groovy auto-generates getters and setters for properties - setVariableName and getVariableName. If you explicitly set a property's access modifier then the getters and setters are not autogened. In groovy you get a map-based constructor by default. This means that you can set a class's properties without creating a constructor. The return key word is not needed and groovy just tries to return the last line You get plenty more java libraries imported automatically Collections You can create a LinkedList by: def nums = [1, 2, 3] as LinkedList You can create a map: def map = [a:1, b:2, c:3] and can use the dot operator to add new key/value pairs. Closures Groovy closures act like anonymous methods that can be passed as a parameter. The common methods that takes closures are: each() findAll() collect() Configuration and Execution Phases Other def allows dynamic variables. Debug To debug a groovy file create a new groovy file and use println with a main. static void main(String[] args) { Bob bob = new Bob() println bob.discoTopologyWithValidSecureSolrKeyStoreConfig } "},"gradle/other.html":{"url":"gradle/other.html","title":"Other","keywords":"","body":"Other `pathJar(, fileTree(dir: , includes: []))`` This is a means of condensing several jars into one. security template with the xml ensuresecurecookiesinliberty deploybasicuserregistry Groovy To debug a groovy file create a new groovy file and use println with a main. static void main(String[] args) { Bob bob = new Bob() println bob.discoTopologyWithValidSecureSolrKeyStoreConfig } Gradle Daemon The Gradle daemon runs Gradle as a background process, meaning that it quickens further build runs. It is recommended that it is ran on dev boxes but not CI boxes. To enable/disable it, from the command line: --daemon --no-daemon or from >/gradle.properties file with the org.gradle.daemon=true property. Debugging Instead of using println to print messages for debugging, using logger.quiet(), logger.warn() or logger.error() (7 for each level), means that the task can be run with -i, --info to print the extra information. Profile gradle --profile This adds a profile folder to the build directory, which contains information about that task such as build time and the configuration. Parallel gradle --parallel Runs projects in parallel where possible. "},"ml/definitions.html":{"url":"ml/definitions.html","title":"Definitions","keywords":"","body":"Definitions Maths A positive Skewness has a heavy tail to the right whilst a negative skewness is to the left. Kurtosis is a measure of how peaked around a the mean a distribution is. A positive kurtosis has more mass. The covariance By differentiating the moment generating function we get the moments. The kth moment of a distribution is given by the average of x^ ML A generative model is one in which we build models for classes and then attempt to classify an input by matching against the generated models. They specify a probability distribution over a dataset of input vectors. They can be used for both supervised and unsupervised problems. In unsupervised tasks we attempt to form a model of P(x), where x is an input vector. In a supervised task we first form P(x|y) and P(y), and use this with Bayes' rule to form P(y|x). A discriminative classification problem attempts to distinguish between classes based on features of the classes. Convolution. There are three ways in which to apply a kernel of a matrix: np.convolve(x, h, \"full\") - implements zero padding np.convolve(x, h, \"same\") - only add padding to the left and top of the matrix (i.e. leading). The output will be the same as the input. np.convolve(x, h, \"valid\") - no padding. The output will be input size - kernel dimension + 1 Note that when convolving you must invert the filter, otherwise you would be performing cross-correlation. Softmax Regression The softmax function is used to represent a categorical distribution (a probability distribution over K different outcomes. Softmax regression is a generalisation of logistic regression where, instead of y being binary it can be a categorial set. "},"ml/jupyter.html":{"url":"ml/jupyter.html","title":"Jupyter","keywords":"","body":"Jupyter Jupyter Notebooks are a powerful way to write and iterate on your Python code for data analysis. Rather than writing and re-writing an entire program, you can write lines of code and run them one at a time. Then, if you need to make a change, you can go back and make your edit and rerun the program again, all in the same window. Click here for a cheatsheet on Jupyter key commands. To add imports to notebooks, open the Anaconda GUI, go to the environments tab, click on the relevant environment, drop-down to uninstalled, search for the import and click apply. Commands To launch the app on a mac, go to the directory you want as the working directory: /anaconda3/bin/jupyter_mac.command notebook shift + enter : runs a cell of code exit/ enter : enter or exit edit mode a/b : add a new cell above or below m : turn the cell into a markdown cell "},"ml/nns.html":{"url":"ml/nns.html","title":"Neural Networks","keywords":"","body":"Neural Networks CNNs in Tensorflow Convolutional Neural Networks (CNNs) contain multiple copies of the same neuron, and all the neurons share the same weights, bias and activation function. As a result, the neuron can be 'reused' in different parts of the input. CNNs operate differently from traditional NNs in which every neuron in a layer is connected to every neuron in the previous layer. This type of connection is general purpose and makes no assumptions about the features in the input data, meaning that it tends to be expensive in terms of memory and computation. Each neuron in a CNN however is only connected to a few nearby local neurons in the previous layer, and the neurons share the same weights and biases. This type of structure only makes sense when the data is spatial, and has local features that can be extracted. So it makes sense to apply a small window around a set of pixels in order to look for images features. By using the same weights, the new assumes that the feature is equally likely to occur at every input position. This means the window can search over the whole image, and can be scaled and rotated. Feature engineering is the process of extracting useful patterns from the input data in order to help the predictive model understand the true nature of the problem. CNNs are extremely good at not only finding features but also combining them together to increase the complexity of the patterns. The final layers use these generated features for the task at hand. Good feature learning significantly increases the accuracy of the applied machine learning algorithms in a way that would be too expensive for the machine learning itself. A kernel which sums adjacent pixels and averages them results in blurring an image. A kernel which only subtracts two adjacent pixels serves to highlight edges, as pixels of similar intensity will subtract to zero. This is useful for the beginning layers of a CNN. The numpy library is typically not enough for deep learning. Common kernels Edge detection A kernel of just two values, one negative and one positive, will reveal edges, as edges tend to have dissimilar adjacent pixel values. Recurrent Neural Networks Traditional neural networks are not well suited to sequential data. This is because a NN does not remember the data it has analysed. However, if there are sequential dependencies in the data (e.g. if its sunny today it is more likely to be sunny tomorrow). In this case we need to move to another type of model like a recurrent neural network. Has one layer but also has a state so that it can remember the analysis that it has up to this point. This state recurs back into the net with each new input. Unlike Convolutional Neural Networks (CNNs) which use forward propagation, or rather, move forward through its pipeline, RNNs utilize backpropogation, or circling back through the pipeline to make use of the \"memory\" mentioned above. There are many different types of recurrent neural network: Recursive neural network. TODO Recursive neural tensor networks. TODO Hopfield networks. Echo state networks. This is an RNN with a sparsely connected hidden later (~1%). The main interest in these is that because the only weights that are modified during training are for the synapses that connect the hidden neurons to output neurons. Thus, the error function is quadratic and can be easily differentiated to a linear system. RNNs are extremely sensitive to changes in their parameters due to vanishing or exploding gradient, meaning trainign is difficult Long-short term memory model (LSTM) is an abstraction of computer memory. 4 main elements: me,ory cell: holding data 3 logisti gates: right (input) writes data into memory cell, readoutput reads data and sens to recirent net -1 and 1 to determine how much sent, keep gate delete data from the info cell. can remember what it needs and can forget what it no longer needs. the gates take a value between 0 and 1. Manipulates data in the information. Use logistic gates as they have nice derivatives. By manipulating values through the gates, we eliminate the vanishing gradient and exploding gradient problems from before. By allowing the network to forget states that are no longer needed, the computational load of the model decreases dramatically. "},"ml/python.html":{"url":"ml/python.html","title":"Python","keywords":"","body":"Python for Machine Learning Image manipulation dot producting an array (that represents a colour image) with [0.299, 0.587, 0.144] will convert that image to greyscale. General Numpy The colon is used for specifying a range of values that can then be used to return parts of a matrix. e.g. If a is a 3x3 matrix then a[:1] returns the first row. The ellipsis in Python is a placeholder for the rest of the array dimensions not specified. e.g. for a 3d array then a[...,0] is the same as a[:,:0]. The .shape method returns the dimensions of an array Convolution For convolution, TensorFlow accepts images of dimensions: [number of images, width, height, channels]. Plotting When you have a tensorflow distribution, to plot with a ramge use: plt.hist(a, 100, (-4.2, 4.2)); "},"ml/regression.html":{"url":"ml/regression.html","title":"Regression","keywords":"","body":"Regression Linear Regression Suited to estimating contnuous variables. We minimise the squared error, i.e. we define the equation to be minimised as loss. Logistic Regression Suited to classification tasks. Whilst called logistic regression, it is actually a probabilistic classification model. It takes linear regression and transforms the numeric estimate into a probability with the logistic function (which is a sigmoid): theta(y) = exp(y) / 1 + exp(y) = p Tensorflow tf.reduce_mean tf.train.GradientDescentOptimiser(learning_rate) optimizer.minimize(loss) "},"ml/research.html":{"url":"ml/research.html","title":"Research","keywords":"","body":"Things to read about: DropConnect Multi-Cloumn deep NNs APAC - augmented pattern classification Dropout in simple deep NNs "},"ml/tensorflow.html":{"url":"ml/tensorflow.html","title":"Tensorflow","keywords":"","body":"TensorFlow Tensorflow is an open-source software library for machine learning, which allows you to keep track of all of your models and see visualisations. Keras is a deep learning library that you can use in conjunction with Tensorflow and several other deep learning libraries. Jupyter Notebook is used to write up. Download here. General C++ and C backend meaning that it runs quicker than just python. Python and C++ API. Dataflow Graph TensorFlow defines computations as graphs and these are made with operations, forming a dataflow graph. This has 2 units: node (mathematical operation) and edge (multidimensional array or tensor). To execute these operations we must launch the graph into a session. This is so efficient because instead of returning to Python all the time, it creates all the operations in the form of graphs and executes them once with the highly optimised backend. variable method Placeholder method So far we have used Variables to manage our data, but there is a more basic structure, the placeholder. A placeholder is simply a variable that we will assign data to at a later date. It allows us to create our operations and build our computation graph, without needing the data. In TensorFlow terminology, we then feed data into the graph through these placeholders. Syntax Imports #Importing import numpy as np from scipy import signal from scipy import misc import matplotlib.pyplot as plt from PIL import Image import tensorflow as tf import matplotlib.patches as mpatches Setup session = tf.Session() result = session.run(computationVariable) session.close() with block Using a with block stops the need to close sessions every time. with tf.Session() as session: result = session.run(computationVariable) Variables and placeholders state = tf.variable() init_op = tf.global_variables_initializer() a = tf.placeholder(datatype) # Create a placeholder than data will be placed in when run session.run(computationVariable, feed_dict={a:1}) Function def methodName(x): return x methodName.eval(session=sess) Adding noise y_data = x_data * 3 + 2 y_data = np.vectorize(lambda y: y + np.random.normal(loc=0.0, scale=0.1))(y_data) Equations tf.reduce_mean tf.train.GradientDescentOptimiser(learning_rate) optimizer.minimize(loss) tf.random_normal( shape, mean=0.0, stddev=1.0, dtype=tf.float32, seed=None, name=None ) ML np.convolve(A,B) # Convolves two arrays Images To convert an image to a matrix of values between 0 and 255: np.asarray(image) Then to plot the matrix image: imgplot = plt.imshow(array) imgplot.set_cmap('gray') plt.show(imgplot) "},"ml/unsupervised.html":{"url":"ml/unsupervised.html","title":"Unsupervides","keywords":"","body":"Unsupervised learning The network inly receives the input data. The goal is to find patterns in the data and to create new representations of it. Data clustering, feature extraction and data dimension reduction are a few sample uses. Restricted Boltzman Machines Restricted Boltzman Machines (RBMs) are shallow NNs that have 2 layers. They reconstruct the input. Neurons within the same layer are not connected. The input/ visible layer consists of several forward and backward passes in which the RBM reconstructs the input data with an eye on finding relationships between inout features. 3 steps: Forward pass. During this step every input is combined with an individual weight and an overall bias. The result goes to the hidden layer, whose neurons may or may not activate. Backward pass. The activated neurons in the hidden layer send the results back to the visible layer where the input will be reconstructed. Assessment of the quality of the reconstruction by comparing it to the original data. The weights are adjusted using this error and the three steps are repeated until the error is sufficiently low. Advantages: RMSs excel when working with unlabelled data, which most data is. During the learning process RBMs extract features from the input, deciding which ones are relevent. They are generally more efficient at dimensionality reduction than PCA. They are grouped as autoencoders as they actually encode their structure. The basic idea of these NNs is to take unlabelled data, encode them, and try and reconstruct them based on the most valuable identified features. Instead of a cost measure, autoencoders use loss as a quality metric, which is the amount of information lost in the reconstruction of the input. RBMs can be though of as generative models. Autoencoders "},"tech/angular.html":{"url":"tech/angular.html","title":"Angular","keywords":"","body":"Angular Two-way data binding If you update the model then the view is automatically updated, and vice versa. Directives Angular uses html to define the UI, via directives. These directives are responsible for setting event handlers behind the scene. Filters Modules "},"tech/devops.html":{"url":"tech/devops.html","title":"Devops","keywords":"","body":"Devops Travis .travis.yml install: install any dependencies required script: run the build script. Custom commands can be set up with before_script and after_script. Jenkins "},"tech/gitbook.html":{"url":"tech/gitbook.html","title":"Gitbook","keywords":"","body":"Gitbook Updated The below instructions are outdated. Rather use the following: npm install gitbook-cli -g gitbook init ./ Then: gitbook serve # or gitbook build When a new plugin is put into the book.json file then you need to run: gitbook install Publish to Pages To publish a gitbook to Github Pages you need to create a branch called gh-pages. This can be achieved with the following shell script: # install the plugins and build the static site gitbook install && gitbook build # checkout to the gh-pages branch git checkout gh-pages # pull the latest updates git pull origin gh-pages --rebase # copy the static site files into the current directory. cp -R _book/* . # remove 'node_modules' and '_book' directory git clean -fx node_modules git clean -fx _book # add all files git add . # commit git commit -a -m \"Update docs\" # push to the origin git push origin gh-pages # checkout to the master branch git checkout master Whenever this script is run it will generate files for the static website and push the gh-pages branch. The website is now available at http(s)://.github.io/. "},"tech/other-tech.html":{"url":"tech/other-tech.html","title":"Other","keywords":"","body":"Other tech UnionFS is used to stack Docker images, allowing each image's file system to be merged, forming a cohesive system. Kubernetes uses Etcd to provide services discovery. Crontab syntax. Cron is a time-based job scheduler in Unix-like OSs. it is driven by a crontab file, which specifies shell commands to run periodically on a given schedule. The crontab files are stores where the lists of jobs and other instructions to the cron daemon are kept. Apache Mesos \"abstracts CPU, memory, stprage, and other compute resources away from machines, enabling fault-tolerant and elastic distributed systems to be easily built and run effectively\". It is used to manage and scale containers. It is usually used alongside a framework that is used to actually decide which services nned to run within Mesos. One of these is Mesosphere. Other Ci tools include TeamCity, which is a paid-solution for handling software building and is similar to Jenkins. CircleCI is another CI SaaS tool that is coupled tightly with Github. ChaosMonkey (created by Netflix) randomly kills services in a system. The effect of killing services is that it forces developers to naturally build fault-tolerant systems. Consul is a discovery service. Apache Zookeeper is a tool that keeps track of distributed configuration data. By itself it is not a complete service discovery tool, but one can be made when combined with Apache Curator (a layer that sits on top of Zookeeper). This later approach provides client-side discovery. Netflix Eureka makes use of client-side routing. Requests are routed round-robin style. It mostly caters to organisations hosted on AWS. Services are required to send Eureka periodic heartbeats. Ectd is a tool for distributing key/value data and making this data accessible and consistent. Again, it does not provide service discovery out the box but does have client libraries in many languages, and as such is used as a component of much larger systems. At its heart Redis is an in-memory key/value store. We use Jackson as a suite of JSON parsing/ generator tools. JAX-RS is a Java API that provides support in creating web services according to the Representational State Transfer architectural pattern (REST). Solr is built on Apache Lucene, which is a Java-based retrieval library. ASP.NET is a server-side web application framework designed for web development to produce dynamic web pages. Java EE (Java Platform, Enterprise Edition) extends the Java Platform, Standard Edition, providing an API for object-relational maping, distributed and multitier architectures, and web servers. Redis is a in-memory database project implementing a networked, in-memory key-value store wuth optional durability. Key-value database is a data storage paradigm designed for managing associative arrays (more commonly known as dictionaries or hashes). Dictionaries are collections of objects, which themselves have fields. They differ from relational databases in that RDBs pre-define the schema. A NoSQL database Apache Lucene is a free and open-source information retrieval software library, Kryo is used for fast and efficient object graph serialisation in Java. We use it to implement our method of storing data as immutables and just refering to it be reference (IDs). To edit data we look up the ID and copy using Kryo, whilst create is a case of cloning as we don't have an ID yet. Maven Maven is a build automation tool used for Java projects. It deals with how the software is built and also describes the dependencies. pom.xml The pom.xml file has all the information to build a project. It contains the majority of the information required to build a project. The pom.xml can be generated through Eclipse by using the m2e plugin. The steps to follow are: File > New > Project Maven > Maven Project > Next \"Create a simple project\" Add information such as Group ID, Artifact ID, Packaging = jar and a name Finish the wizard Can build by selecting the project and then from the context menu clicking Run as > Maven install We currently use MapDB. This uses two trees: H-trees and B-trees. One is good if you know the data is going to be where you say it is and as such is optimised for fetching the data, whilst the other is optimised for performing lookups. When we move away from transaction synchronicity we will use another tech like GraphDB. There is also something called Apache TinkerPop. Another is Gremlin API. Transaction synchronicity assures the completion of requests but is costly and when you need performance you will have to start doing things asynchronously. Haskell Functional language. Esri (Environmental Systems Research Institute) is an international supplier of geographic information system software. React is a JS library for building user interfaces. It can be used in the development of single page applications. Typescript is an open-source language developed by Microsoft that is a superset of Javascript. It adds optional static typing to the language. JFrog Artifactory is a universal repository manager. "},"tech/rails.html":{"url":"tech/rails.html","title":"Rails","keywords":"","body":"Rails Setup gem install rails -v 5.0.5 Install rails To Set up a nice front-end: ```gem \"bootstrap-sass\" gem \"bootstrap-sass\" gem \"font-awesome-sass\" gem \"simple_form\" gem \"autoprefixer-rails\" bundle install rails generate simple_form:install —bootstrap ``` To set up the Le Wagon CSS file organisation: To set up a file to save secret keys: // In the gemfile gem 'figaro' // In the terminal bundle install bundle bistubs figaro figaro install spring stop "},"tech/swagger.html":{"url":"tech/swagger.html","title":"Swagger","keywords":"","body":"Swagger .yaml Metadata, API name and Description swagger: Every swagger document starts with Swagger version declaration info: This is used to specify further metadata, such as: title (required) version (required) description contact name url license name url URL definition schemes: This is an array of protocols supported by the API. host: T basePath: The URL prefix for all the endpoints. Paths The paths: object contains objects which are called the name of the endpoints, in the syntax: /rating. Each of these has an object for each of the verbs it is to implement (i.e. post, put, etc.): tags: This is used to group related API endpoints. paths: Defines the enpoints of the API. operationId: - responses: - HTTP response number. description: schema: consumes: produces: description: parameters: Definitions definitions have the same goal as MSON: to make it easy to describe data structures and use them in API description. ​ "}}